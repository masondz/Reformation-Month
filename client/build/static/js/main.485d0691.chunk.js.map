{"version":3,"sources":["components/FindChallenge.js","components/ChallengeTotal.js","components/EditChallenge2.js","components/ReaderChallenges.js","components/ChallengeDashboard.js","components/ReaderInfo.js","components/ReportReading.js","components/ReportAdReaderReading.js","components/JoinFamilyGroup.js","components/CreateFamilyGroup.js","components/CreateAdditionalReader.js","components/DeleteAdReader.js","components/FamilyGroup.js","components/Dashboard.js","components/Register.js","components/Login.js","App.js","index.js"],"names":["FindChallenge","setAuth","setInReadingChallenge","checkChallenge","setReadersChallenges","readersChallenges","useState","challengeList","setChallengeList","challenge_name","id","organization","inputs","setInputs","a","fetch","method","headers","token","localStorage","response","json","parseRes","console","error","message","useEffect","getChallenges","readerId","setReaderId","getReaderId","i","length","updateInputs","onSubmit","e","preventDefault","body","reader_id","challenge_id","JSON","stringify","then","results","log","status","toast","success","className","htmlFor","value","onChange","target","list","name","placeholder","map","challenge","goal","ChallengeTotal","setCalculating","reader","displayTotal","total","setTotal","progress","setProgress","challenge_type","getTotal","getTotals","chapters_read","books_read","verses_memorized","style","width","EditChallenge2","originalInputs","onDelete","choice","window","confirm","deleteChallenge","location","warning","onRadioClick","updateChallenge","messages","jsxId","targetId","type","class","data-toggle","data-target","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","data-dismiss","onClick","disabled","ReaderChallenges","first_name","last_name","versus_memorized","calculating","removeReader","filter","index","challege_id","toString","challenge_admin","ChallengeDashboard","setCreateChallenge","newChallengeId","setNewChallengeId","addReader","onSubmitForm","required","autoComplete","ReaderInfo","ReportReading","setReader","toggleFG","chaptersTotal","setChaptersTotal","booksTotal","setBooksTotal","versesTotal","setVersesTotal","challengeType","setChallengeType","resetAll","updateTotals","newTotal","Number","thisChallengeType","res","color","ReportAdReaderReading","adReader","setDisplayTotal","adReaderTotal","setAdReaderTotal","resetInputs","ad_reader_id","JoinFamilyGroup","familyName","familyPassword","family_name","fg_password","data-bs-toggle","data-bs-target","form","CreateFamilyGroup","setFamGroup","setInFamGroup","confirmPassword","CreateAdditionalReader","adReaders","setAdReaders","famGroup","setCheckAdReaders","checkAdReaders","leaveFG","input","setInput","resetInput","adReaderJoinFG","adReaderId","fg_id","joinFG","parseJoinFG","Error","newAdReader","button","DeleteAdReader","deleteAdReader","newList","float","FamilyGroup","inFamGroup","undefined","getFamilyGroup","familyGroup","setLoading","request","parsRes","getAdditionalReader","loading","backgroundColor","Dashboard","inReadingChallenge","createChallenge","familyGroupState","setFamilyGroupState","getReader","removeItem","logout","Register","email","user_password","onSubmiForm","setItem","to","Login","configure","App","isAuthenticated","setIsAuthenticated","boolean","isAuth","exact","path","render","props","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.485d0691.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst FindChallenge = ({\r\n    setAuth,\r\n    setInReadingChallenge,\r\n    setReadersChallenges,\r\n    readersChallenges,\r\n    checkChallenge,\r\n}) => {\r\n    const [challengeList, setChallengeList] = useState([])\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: '',\r\n        id: '',\r\n        organization: '',\r\n    })\r\n\r\n    const { challenge_name, id, organization } = inputs //destructure reading-challenge info\r\n    //\r\n    //\r\n    //\r\n    //Get all of the Challenges //\r\n    async function getChallenges() {\r\n        try {\r\n            const response = await fetch('/find-challenges', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n\r\n            const parseRes = await response.json()\r\n            setChallengeList(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChallenges()\r\n    }, [])\r\n    //\r\n    //\r\n    //\r\n    //Get the reader's ID\r\n    const [readerId, setReaderId] = useState('Blank id')\r\n\r\n    useEffect(() => {\r\n        async function getReaderId() {\r\n            try {\r\n                const response = await fetch('/dashboard/', {\r\n                    method: 'GET',\r\n                    headers: { token: localStorage.token },\r\n                })\r\n\r\n                const parseRes = await response.json()\r\n\r\n                setReaderId(parseRes.id)\r\n            } catch (err) {\r\n                console.error(err.message)\r\n            }\r\n        }\r\n        getReaderId()\r\n    }, [readerId])\r\n    //\r\n    //\r\n    //\r\n    //update inputs\r\n    useEffect(() => {\r\n        const updateInputs = () => {\r\n            for (let i = 0; i < challengeList.length; i++) {\r\n                if (challengeList[i].challenge_name === inputs.challenge_name) {\r\n                    setInputs({\r\n                        challenge_name: challengeList[i].challenge_name,\r\n                        organization: challengeList[i].organization,\r\n                        id: challengeList[i].id,\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        updateInputs()\r\n    }, [challenge_name, challengeList])\r\n    //\r\n    //\r\n    //\r\n    //Submit challenge_id and reader_id to readers_reading_challenges table in database\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const reader_id = readerId\r\n            const challenge_id = id\r\n            const body = { reader_id, challenge_id }\r\n            const response = await fetch('/find-challenges', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n\r\n                body: JSON.stringify(body),\r\n            })\r\n                .then((response) => {\r\n                    response.json().then((results) => console.log(results))\r\n                    if (response.status === 200) {\r\n                        toast.success(\r\n                            `You have joined the ${challenge_name} challenge!`\r\n                        )\r\n                        setInReadingChallenge(true)\r\n                        checkChallenge()\r\n                    } else if (response.status === 401) {\r\n                        toast.error(\r\n                            `You have already joined challenge: ${challenge_name}`\r\n                        )\r\n                    } else if (response.status === 400) {\r\n                        toast.error(`${challenge_name} does not exists`)\r\n                    }\r\n                })\r\n                .then(\r\n                    setInputs({ challenge_name: '', id: '', organization: '' })\r\n                )\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    //\r\n    //\r\n    //\r\n    //onChange function\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, challenge_name: e.target.value })\r\n    }\r\n\r\n    const [verb, setVerb] = useState('')\r\n\r\n    //   return statement\r\n    return (\r\n        <Fragment>\r\n            <form className=\"container\" onSubmit={onSubmit}>\r\n                <div className=\"row align-items-end\">\r\n                    <label htmlFor=\"chal-list\">Find a reading Challenge</label>\r\n                    <input\r\n                        value={challenge_name}\r\n                        onChange={(e) => onChange(e)}\r\n                        className=\"form-control\"\r\n                        list=\"challenge-list\"\r\n                        name=\"chal-list\"\r\n                        id=\"chal-list\"\r\n                        placeholder=\"Search for reading challenge\"\r\n                    />\r\n                    <datalist id=\"challenge-list\">\r\n                        {challengeList.map((challenge) => {\r\n                            return (\r\n                                <option\r\n                                    value={challenge.challenge_name}\r\n                                    key={challenge.id}\r\n                                >\r\n                                    {challenge.challenge}: {challenge.goal}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </datalist>\r\n                    <button className=\"btn btn-outline-success my-2\">\r\n                        Join\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FindChallenge\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst ChallengeTotal = ({\r\n    setAuth,\r\n    challenge,\r\n    setCalculating,\r\n    reader,\r\n    displayTotal,\r\n}) => {\r\n    const [total, setTotal] = useState('...')\r\n    console.log('ChallengeTotal challenge prop:' + challenge.challenge)\r\n    console.log('displayTotal challenge prop:' + displayTotal)\r\n\r\n    const [progress, setProgress] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const getTotals = async () => {\r\n            const challenge_id = challenge.id\r\n            const challenge_type = challenge.challenge\r\n            try {\r\n                const getTotal = await fetch(\r\n                    `/challenge-dashboard/challenge-total/${challenge_id}/${challenge_type}`,\r\n                    {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            token: localStorage.token,\r\n                        },\r\n                    }\r\n                )\r\n                const parseRes = await getTotal.json()\r\n                console.log('getTotal query' + parseRes)\r\n                setTotal(parseRes.total)\r\n                setCalculating(false)\r\n            } catch (err) {\r\n                console.error(err.message)\r\n            }\r\n        }\r\n        getTotals()\r\n        setProgress((total / challenge.goal) * 100)\r\n    }, [\r\n        total,\r\n        challenge.goal,\r\n        challenge.id,\r\n        reader.chapters_read,\r\n        reader.books_read,\r\n        reader.verses_memorized,\r\n        displayTotal.chapters_read,\r\n        displayTotal.books_read,\r\n        displayTotal.verses_memorized,\r\n    ])\r\n    console.log(progress)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>\r\n                    {total} / {challenge.goal} {challenge.challenge}\r\n                </h3>\r\n                <div className=\"progress\">\r\n                    <div\r\n                        className=\"progress-bar bg-warning\"\r\n                        style={{ width: `${progress}%` }}\r\n                    ></div>\r\n                </div>\r\n                {/* <meter id=\"goal\" min=\"0\" max={challenge.goal} value={total} /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeTotal\r\n","// inputs may need to be defined by the recieved data in the parent state, then passed as props to EditChallenge.js\r\n\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n//third test\r\nconst EditChallenge2 = ({\r\n    challenge,\r\n    reader,\r\n    setReadersChallenges,\r\n    readersChallenges,\r\n}) => {\r\n    console.log(readersChallenges)\r\n    // console.log(challenge);\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: challenge.challenge_name,\r\n        organization: challenge.organization,\r\n        goal: challenge.goal,\r\n        challenge_type: challenge.challenge,\r\n        id: challenge.id,\r\n    })\r\n    console.log(inputs.challenge_type)\r\n    const originalInputs = {\r\n        challenge_name: challenge.challenge_name,\r\n        organization: challenge.organization,\r\n        goal: challenge.goal,\r\n        challenge_type: challenge.challenge,\r\n        id: challenge.id,\r\n    }\r\n\r\n    const onDelete = async (challenge_id) => {\r\n        const choice = window.confirm(\r\n            'Are you sure you want to delete challenge?'\r\n        )\r\n        try {\r\n            if (choice === true) {\r\n                console.log('going to delete the challenge')\r\n                const reader_id = reader.id\r\n                const challenge_name = inputs.challenge_name\r\n                console.log(challenge_name, reader_id)\r\n                const body = { reader_id, challenge_name }\r\n\r\n                console.log(readersChallenges)\r\n                const deleteChallenge = await fetch('/challenge-dashboard/', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json', //this is needed since we're sending over body content\r\n                        token: localStorage.token,\r\n                    },\r\n                    body: JSON.stringify(body),\r\n                })\r\n                const response = await deleteChallenge.json()\r\n                console.log(response)\r\n                if (deleteChallenge.status === 202) {\r\n                    window.location = '/'\r\n                } else if (deleteChallenge.status === 401) {\r\n                    toast.error(\"Challenge already doesn't exist.\")\r\n                } else if (deleteChallenge.status === 403) {\r\n                    toast.error(\r\n                        'You are not authorized to delete this challenge.'\r\n                    )\r\n                }\r\n            } else {\r\n                toast.warning('Challenge not deleted.')\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault()\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onRadioClick = (e) => {\r\n        console.log('radio clicked')\r\n        e.preventDefault()\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    //work on submitting changes\r\n    // console.log(inputs);\r\n    const updateChallenge = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const reader_id = reader.id\r\n            const { challenge_name, organization, challenge_type, goal, id } =\r\n                inputs\r\n            const body = {\r\n                reader_id,\r\n                challenge_name,\r\n                organization,\r\n                challenge_type,\r\n                goal,\r\n                id,\r\n            }\r\n            console.log(body)\r\n            const response = await fetch('/challenge-dashboard/', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            if (response.status === 403) {\r\n                return toast.error(\r\n                    'You are not authorized to change this challenge'\r\n                )\r\n            }\r\n            window.location = '/'\r\n            toast.success('Reading Challenge updated!')\r\n        } catch (err) {\r\n            console.error(err.messages)\r\n        }\r\n    }\r\n\r\n    const jsxId = `id${inputs.id}`\r\n    const targetId = `#id${inputs.id}`\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                class=\"challenge-edit\"\r\n                data-toggle=\"modal\"\r\n                data-target={targetId}\r\n            >\r\n                Edit\r\n            </button>\r\n            <div\r\n                className=\"modal fade\"\r\n                id={jsxId}\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"edit-challenge\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h3 class=\"modal-title\" id={jsxId}>\r\n                                Edit Challenge {inputs.challenge_name}\r\n                            </h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setInputs(originalInputs)}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form className=\"form-control\">\r\n                                <div className=\"form-control bg-light text-black\">\r\n                                    <lable htmlFor=\"goal\" className=\"mr-2\">\r\n                                        Goal:\r\n                                    </lable>\r\n                                    <input\r\n                                        className=\"form-control mt-1\"\r\n                                        type=\"number\"\r\n                                        name=\"goal\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={inputs.goal}\r\n                                    />\r\n                                </div>\r\n                                <br></br>\r\n                                <lable\r\n                                    htmlFor=\"organization\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Organization:\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"text\"\r\n                                        name=\"organization\"\r\n                                        value={inputs.organization}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                                <br></br>\r\n                                <div className=\"form-control bg-light\">\r\n                                    Challenge Type:\r\n                                    <br></br>\r\n                                    <h4 className=\"OptionSign border border-secondary\">\r\n                                        {inputs.challenge_type}\r\n                                    </h4>\r\n                                    <div class=\"btn-group ChallengeType bg-white\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-outline-secondary\"\r\n                                            name=\"challenge_type\"\r\n                                            onClick={(e) => onRadioClick(e)}\r\n                                            value=\"chapters\"\r\n                                        >\r\n                                            Chapters\r\n                                        </button>\r\n                                        <button\r\n                                            disabled\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-outline-secondary\"\r\n                                            value=\"books\"\r\n                                            name=\"challenge_type\"\r\n                                            onClick={(e) => onRadioClick(e)}\r\n                                        >\r\n                                            Books\r\n                                        </button>\r\n                                        <button\r\n                                            disabled\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-outline-secondary\"\r\n                                            value=\"verses\"\r\n                                            name=\"challenge_type\"\r\n                                            onClick={(e) => onRadioClick(e)}\r\n                                        >\r\n                                            Verses\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <br></br>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary\"\r\n                                onClick={(e) => updateChallenge(e)}\r\n                            >\r\n                                Save changes\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-danger\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => {\r\n                                    onDelete()\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditChallenge2\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport ChallengeTotal from './ChallengeTotal'\r\n\r\nimport EditChallenge from './EditChallenge'\r\nimport EditChallenge2 from './EditChallenge2'\r\n\r\nconst ReaderChallenges = ({\r\n    setAuth,\r\n    reader,\r\n    readersChallenges,\r\n    setReadersChallenges,\r\n    setInReadingChallenge,\r\n    displayTotal,\r\n}) => {\r\n    // console.log(readersChallenges);\r\n    console.log('ReadeChallenges.js:displayTotal -' + displayTotal)\r\n    const {\r\n        //destructer reader that is passed down by props from Dashboard\r\n        first_name,\r\n        last_name,\r\n        chapters_read,\r\n        books_read,\r\n        versus_memorized,\r\n        id,\r\n    } = reader\r\n\r\n    const [calculating, setCalculating] = useState(false)\r\n    const toggleCa = () => {\r\n        calculating === true ? setCalculating(false) : setCalculating(true)\r\n    }\r\n\r\n    const [total, setTotal] = useState('...')\r\n\r\n    //Remove reader from reading challenge\r\n    const removeReader = async (reader_id, challenge_id) => {\r\n        try {\r\n            const readerChallenge = await fetch(\r\n                `/reader-dashboard/reader-challenge-id/?reader_id=${reader_id}&challenge_id=${challenge_id}`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        token: localStorage.token,\r\n                    },\r\n                }\r\n            )\r\n            await setReadersChallenges(\r\n                readersChallenges.filter(\r\n                    (challenge) => challenge.id !== challenge_id\r\n                )\r\n            )\r\n            toast.warning('You have left the reading challenge.')\r\n            if (readersChallenges.length === 0) {\r\n                setInReadingChallenge(false)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (readersChallenges.length === 0) {\r\n            setInReadingChallenge(false)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"my-2\">\r\n            {readersChallenges.map((challenge, index) => {\r\n                return (\r\n                    <Fragment key={challenge.id.toString()}>\r\n                        <div className=\"challenge-card\">\r\n                            <div className=\"challenge-content\">\r\n                                <div className=\"challenge-titles\">\r\n                                    <p>{challenge.organization}</p>\r\n                                    <h3 value={challenge.id} key={110}>\r\n                                        {challenge.challenge_name}\r\n                                    </h3>\r\n                                    <div\r\n                                        key={(\r\n                                            challenge.challege_id + 1\r\n                                        ).toString()}\r\n                                    >\r\n                                        {calculating ? (\r\n                                            '...'\r\n                                        ) : (\r\n                                            <ChallengeTotal\r\n                                                reader={reader}\r\n                                                setAuth={setAuth}\r\n                                                challenge={challenge}\r\n                                                setTotal={setTotal}\r\n                                                setCalculating={setCalculating}\r\n                                                displayTotal={displayTotal}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                {reader.id !== challenge.challenge_admin ? (\r\n                                    <div className=\"leave-challenge\">\r\n                                        <p\r\n                                            onClick={() =>\r\n                                                removeReader(\r\n                                                    reader.id,\r\n                                                    challenge.id\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            +\r\n                                        </p>\r\n                                    </div>\r\n                                ) : (\r\n                                    <Fragment key={challenge.id.toString()}>\r\n                                        <EditChallenge2\r\n                                            challenge={challenge}\r\n                                            reader={reader}\r\n                                            setReadersChallenges={\r\n                                                setReadersChallenges\r\n                                            }\r\n                                            readersChallenges={\r\n                                                readersChallenges\r\n                                            }\r\n                                        />\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReaderChallenges\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ChallengeDashboard = ({ setAuth, setCreateChallenge, reader }) => {\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: '',\r\n        organization: '',\r\n        challenge_type: 'chapters',\r\n        goal: '',\r\n    })\r\n    const [newChallengeId, setNewChallengeId] = useState('')\r\n\r\n    //variables from state\r\n    const { challenge_name, organization, challenge_type, goal } = inputs\r\n\r\n    //input fields for from\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    //radio buttons for challenge-type\r\n    const onRadioClick = (e) => {\r\n        console.log('radio clicked')\r\n        setInputs({ ...inputs, challenge_type: e.target.value })\r\n    }\r\n\r\n    const addReader = async () => {\r\n        const reader_id = reader.id\r\n        const challenge_id = newChallengeId\r\n        const body = { reader_id, challenge_id }\r\n        const response = await fetch('/find-challenges', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: localStorage.token,\r\n            },\r\n\r\n            body: JSON.stringify(body),\r\n        })\r\n        console.log(`reader_id: ${reader_id} challenge_id: ${challenge_id}`)\r\n        return response.json()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (newChallengeId) {\r\n            console.log('newChallengeId state is not falsey')\r\n            addReader()\r\n        }\r\n    }, [newChallengeId])\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { challenge_name, organization, challenge_type, goal }\r\n            const response = await fetch('/challenge-dashboard', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            if (response.status === 401) {\r\n                return toast.error('Challenge Name already exists')\r\n            }\r\n            await response\r\n                .json()\r\n                .then((response) => setNewChallengeId(response.id))\r\n                .then(() => console.log(newChallengeId))\r\n                .then(() => addReader())\r\n\r\n            //   const parseSecond = await addReadertoChallenge.json();\r\n            console.log(newChallengeId)\r\n            setInputs({\r\n                challenge_name: '',\r\n                organization: '',\r\n                challenge_type: 'chapters',\r\n                goal: '',\r\n            })\r\n            window.location = '/'\r\n        } catch (err) {\r\n            console.error(err.message)\r\n            toast.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>Create or Change Challenge</h3>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input\r\n                    required\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"challenge_name\"\r\n                    placeholder=\"Challenge Name\"\r\n                    value={challenge_name}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"organization\"\r\n                    placeholder=\"Organization (church name, bible study, facebook group etc.)\"\r\n                    value={organization}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <h3>Select Challenge Type</h3>\r\n                <div className=\"form-check-inline\">\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        id=\"chapters\"\r\n                        className=\"btn-check\"\r\n                        type=\"radio\"\r\n                        name=\"challenge-type\"\r\n                        onClick={(e) => onRadioClick(e)}\r\n                        value=\"chapters\"\r\n                    />\r\n                    <label\r\n                        className=\"btn btn-outline-primary\"\r\n                        htmlFor=\"chapters\"\r\n                    >\r\n                        Read Chapters\r\n                    </label>\r\n                    <input\r\n                        id=\"books\"\r\n                        disabled\r\n                        className=\"btn-check\"\r\n                        autoComplete=\"off\"\r\n                        type=\"radio\"\r\n                        name=\"challenge-type\"\r\n                        value=\"books\"\r\n                        onClick={(e) => onRadioClick(e)}\r\n                    />\r\n                    <label\r\n                        className=\"btn btn-outline-primary my-3 mx-3\"\r\n                        htmlFor=\"books\"\r\n                    >\r\n                        Read Books\r\n                    </label>\r\n                    <input\r\n                        id=\"verses\"\r\n                        disabled\r\n                        className=\"btn-check\"\r\n                        type=\"radio\"\r\n                        name=\"challenge-type\"\r\n                        value=\"verses\"\r\n                        onClick={(e) => onRadioClick(e)}\r\n                    />\r\n                    <label className=\"btn btn-outline-primary\" htmlFor=\"verses\">\r\n                        Memorize Verses\r\n                    </label>\r\n                </div>\r\n                <input\r\n                    required\r\n                    className=\"form-control my-3\"\r\n                    type=\"number\"\r\n                    name=\"goal\"\r\n                    placeholder=\"Challenge Goal\"\r\n                    value={goal}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-outline-success btn-lg mx-2\">\r\n                    Submit\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-danger btn-lg my-2\"\r\n                    onClick={() => setCreateChallenge(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChallengeDashboard\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport './ReaderInfo.css'\r\n\r\nconst ReaderInfo = ({ setAuth, reader }) => {\r\n    const { chapters_read, books_read, verses_memorized } = reader\r\n    console.log(chapters_read)\r\n    console.log(reader)\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-reader\">\r\n                <div className=\"stats\">\r\n                    <h4>Welcome {reader.first_name}:</h4>\r\n                    <p id=\"chapters\">{chapters_read} chapters</p>\r\n                    {/* <p id=\"books\">{books_read} books</p>\r\n                    <p id=\"verses\">{verses_memorized} verses</p> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div>\r\n        <div className=\"d-flex justify-content-lg-start align-items-center\">\r\n          <h2 className=\"pe-3\">Chapters: {reader.chapters_read}</h2>\r\n          <h2 className=\"pe-3\">Books: {reader.books_read}</h2>\r\n          <h2 className=\"pe-3\">Verses: {reader.verses_memorized}</h2>\r\n        </div>\r\n      </div> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReaderInfo\r\n","//add adReader to ReportReading parameters. [X]\r\n//if adReader is undefined, leave reader to reader and set endPoint to '/submit-report' [X]\r\n//else, set reader to adReader [X]\r\n//set endPoint to '/additional-readers' [ ]\r\n\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\n\r\nconst ReportReading = ({ setAuth, reader, setReader, toggleFG }) => {\r\n    const [reporting, setReporting] = useState(false)\r\n    const [chaptersTotal, setChaptersTotal] = useState('')\r\n    const [booksTotal, setBooksTotal] = useState('')\r\n    const [versesTotal, setVersesTotal] = useState('')\r\n    const [challengeType, setChallengeType] = useState('')\r\n\r\n    const [endPoint, setEndPoint] = useState('')\r\n\r\n    const resetAll = () => {\r\n        setChaptersTotal('')\r\n        setBooksTotal('')\r\n        setVersesTotal('')\r\n    }\r\n\r\n    const updateTotals = (total, challengeType) => {\r\n        let newTotal = reader[challengeType] + Number(total)\r\n        setReader({\r\n            ...reader,\r\n            [challengeType]: newTotal,\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        try {\r\n            const thisChallengeType = challengeType\r\n            const challenge_type = challengeType\r\n            const reader_id = reader.id\r\n            let total\r\n            // check which challenge type it is\r\n            if (thisChallengeType === 'chapters_read') {\r\n                total = chaptersTotal\r\n                updateTotals(total, challengeType)\r\n            } else if (thisChallengeType === 'books_read') {\r\n                total = booksTotal\r\n                updateTotals(total, challengeType)\r\n            } else {\r\n                total = versesTotal\r\n                updateTotals(total, challengeType)\r\n            }\r\n            const body = { challenge_type, total, reader_id }\r\n            const response = await fetch(`/submit-report/`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const res = await response.json()\r\n            console.log(res)\r\n            resetAll()\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        if (e.target.name === 'chapters_read') {\r\n            return setChaptersTotal(e.target.value)\r\n        } else if (e.target.name === 'books_read') {\r\n            return setBooksTotal(e.target.value)\r\n        } else {\r\n            setVersesTotal(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"nav-buttons\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"nav-btn\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#thing\"\r\n                >\r\n                    Report Reading\r\n                </button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"nav-btn\"\r\n                    onClick={() => toggleFG()}\r\n                >\r\n                    Family Group\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"modal fade\"\r\n                id=\"thing\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"edit-challenge\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\" style={{ 'z-index': '2' }}>\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h3\r\n                                class=\"modal-title\"\r\n                                id=\"thing\"\r\n                                style={{ color: 'black' }}\r\n                            >\r\n                                Report Reading for {reader.first_name}\r\n                            </h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => resetAll()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form className=\"form-control\">\r\n                                <div className=\"form-control bg-light text-black\">\r\n                                    <lable htmlFor=\"Chapters\" className=\"mr-2\">\r\n                                        Chapters Read\r\n                                        <input\r\n                                            className=\"form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"chapters_read\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                            value={chaptersTotal}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            name=\"chapters_read\"\r\n                                            htmlFor=\"chapters_memorized\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-dismiss=\"modal\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable>\r\n                                </div>\r\n                                <br></br>\r\n                                {/* <lable\r\n                                    htmlFor=\"books_read\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Books Read\r\n                                    <input\r\n                                        className=\"form-control mt-1\"\r\n                                        type=\"number\"\r\n                                        name=\"books_read\"\r\n                                        value={booksTotal}\r\n                                        placeholder=\"0\"\r\n                                        onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                    />\r\n                                    <button\r\n                                        data-dismiss=\"modal\"\r\n                                        type=\"button\"\r\n                                        name=\"books_read\"\r\n                                        htmlFor=\"books_read\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={(e) => onSubmit(e)}\r\n                                    >\r\n                                        Save changes\r\n                                    </button>\r\n                                </lable>\r\n                                <br></br>\r\n                                <form>\r\n                                    <lable\r\n                                        htmlFor=\"verses_memorized\"\r\n                                        className=\"bg-light text-black form-control\"\r\n                                    >\r\n                                        Verses Memorized\r\n                                        <input\r\n                                            className=\" form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"verses_memorized\"\r\n                                            value={versesTotal}\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                        />\r\n                                        <button\r\n                                            data-dismiss=\"modal\"\r\n                                            type=\"button\"\r\n                                            name=\"verses_memorized\"\r\n                                            htmlFor=\"verses_memorized\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable> \r\n                                </form>*/}\r\n                                <div class=\"modal-footer\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReportReading\r\n","//Trying to allow values to change in report modal.\r\n//To do this, values of the inputs must have their own state, that reset to 0 after form is submitted.\r\n//I've started an initialValue state, and began coding a function. Good Luck.\r\n\r\n//if adReader is true, set reader to adReader?\r\n//if adReader is true, set endPoint to additional-reader?\r\n//else, set endPoint to submit-report?\r\n\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\n\r\nconst ReportAdReaderReading = ({\r\n    setAuth,\r\n    adReader,\r\n    displayTotal,\r\n    setDisplayTotal,\r\n}) => {\r\n    const { name, chapters_read, books_read, verses_memorized } = adReader\r\n\r\n    const [inputs, setInputs] = useState({\r\n        chapters_read: '',\r\n        books_read: '',\r\n        verses_memorized: '',\r\n    })\r\n    const [challengeType, setChallengeType] = useState('')\r\n\r\n    const [adReaderTotal, setAdReaderTotal] = useState({\r\n        chapters_read: '',\r\n        books_read: '',\r\n        verses_memorized: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        setDisplayTotal({\r\n            chapters_read: chapters_read,\r\n            books_read: books_read,\r\n            verses_memorized: verses_memorized,\r\n        })\r\n        setAdReaderTotal({\r\n            chapters_read: chapters_read,\r\n            books_read: books_read,\r\n            verses_memorized: verses_memorized,\r\n        })\r\n    }, [name, chapters_read, books_read, verses_memorized, setDisplayTotal]) //needed something to get the first reader in the list to display stuff\r\n\r\n    const updateTotals = (total, challengeType) => {\r\n        console.log(`${challengeType}: ${adReaderTotal[challengeType]}`)\r\n        let newTotal = Number(adReaderTotal[challengeType]) + Number(total) //I think this should change displayed totals\r\n        console.log(newTotal)\r\n        setAdReaderTotal({\r\n            ...adReaderTotal,\r\n            [challengeType]: newTotal,\r\n        })\r\n        setDisplayTotal({\r\n            ...displayTotal,\r\n            [challengeType]: newTotal,\r\n        })\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setInputs({\r\n            chapters_read: '',\r\n            books_read: '',\r\n            verses_memorized: '',\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        try {\r\n            const thisChallengeType = challengeType //for display totals\r\n            const challenge_type = challengeType //for fetch request\r\n            const ad_reader_id = adReader.ad_reader_id //for fetch request\r\n            let total //send total via fetch. Postgres will ADD it to correct challenge type\r\n            if (thisChallengeType === 'chapters_read') {\r\n                total = inputs.chapters_read\r\n                updateTotals(total, challengeType)\r\n            } else if (thisChallengeType === 'books_read') {\r\n                total = inputs.books_read\r\n                updateTotals(total, challengeType)\r\n            } else {\r\n                total = inputs.verses_memorized\r\n                updateTotals(total, challengeType)\r\n            }\r\n            const body = { challenge_type, total, ad_reader_id }\r\n            const response = await fetch(`/additional-readers`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const res = await response.json()\r\n            console.log(res)\r\n            resetInputs()\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        //this allows the inputs values to change\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        if (e.target.name === 'chapters_read') {\r\n            return setInputs({\r\n                ...inputs,\r\n                chapters_read: e.target.value,\r\n            })\r\n        } else if (e.target.name === 'books_read') {\r\n            return setInputs({ ...inputs, books_read: e.target.value })\r\n        } else {\r\n            setInputs({ ...inputs, verses_memorized: e.target.value })\r\n        }\r\n        console.log('you changed something')\r\n    }\r\n\r\n    let jsxId = `ad${adReader.ad_reader_id}`\r\n    let targetId = `#ad${adReader.ad_reader_id}`\r\n\r\n    return (\r\n        <>\r\n            <h5>\r\n                Chapters: {adReaderTotal.chapters_read}\r\n                {/* Books:{' '}\r\n                {adReaderTotal.books_read} Verses:{' '}\r\n    {adReaderTotal.verses_memorized} */}\r\n            </h5>\r\n            <br></br>\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-toggle=\"modal\"\r\n                data-target={targetId}\r\n            >\r\n                Report Reading\r\n            </button>\r\n            <div\r\n                className=\"modal fade\"\r\n                id={jsxId}\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"edit-challenge\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h3 class=\"modal-title\" id={jsxId}>\r\n                                Report Reading for: {name}\r\n                            </h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => resetInputs()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form className=\"\">\r\n                                <div className=\"form-control bg-light text-black\">\r\n                                    <lable htmlFor=\"Chapters\" className=\"mr-2\">\r\n                                        Chapters Read\r\n                                        <input\r\n                                            className=\"form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"chapters_read\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                            value={inputs.chapters_read}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            name=\"chapters_read\"\r\n                                            htmlFor=\"chapters_read\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-dismiss=\"modal\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable>\r\n                                </div>\r\n                                {/* <br></br>\r\n                                <lable\r\n                                    htmlFor=\"books_read\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Books Read\r\n                                    <input\r\n                                        className=\"form-control mt-1\"\r\n                                        type=\"number\"\r\n                                        name=\"books_read\"\r\n                                        value={inputs.books_read}\r\n                                        placeholder=\"0\"\r\n                                        onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                    />\r\n                                    <button\r\n                                        data-dismiss=\"modal\"\r\n                                        type=\"button\"\r\n                                        name=\"books_read\"\r\n                                        htmlFor=\"books_read\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={(e) => onSubmit(e)}\r\n                                    >\r\n                                        Save changes\r\n                                    </button>\r\n                                </lable>\r\n                                <br></br>\r\n                                <form>\r\n                                    <lable\r\n                                        htmlFor=\"verses_memorized\"\r\n                                        className=\"bg-light text-black form-control\"\r\n                                    >\r\n                                        Verses Memorized\r\n                                        <input\r\n                                            className=\" form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"verses_memorized\"\r\n                                            value={inputs.verses_memorized}\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                        />\r\n                                        <button\r\n                                            data-dismiss=\"modal\"\r\n                                            type=\"button\"\r\n                                            name=\"verses_memorized\"\r\n                                            htmlFor=\"verses_memorized\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable>\r\n                                </form> */}\r\n                                <div class=\"modal-footer\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportAdReaderReading\r\n","// -> /family-group/add-reader  is the route to add reader\r\n// -> /family-group/add-additional-reader  is the rout to add additional reader\r\n\r\nimport React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst JoinFamilyGroup = ({ setAuth, reader }) => {\r\n    const [inputs, setInputs] = useState({\r\n        familyName: '',\r\n        familyPassword: '',\r\n    })\r\n\r\n    const { familyName, familyPassword } = inputs\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        console.log('you submitted something.')\r\n        let family_name = familyName\r\n        let fg_password = familyPassword\r\n        let reader_id = reader.id\r\n        try {\r\n            const body = { family_name, fg_password, reader_id }\r\n            const response = await fetch('/family-group/add-reader', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n            window.location = '/'\r\n            if (parseRes.status === 401) {\r\n                return toast.error('Password or Family Name is incorrect')\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setInputs({\r\n            familyName: '',\r\n            familyPassword: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Button trigger modal  */}\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#joinFGModal\"\r\n            >\r\n                Join A Family Group\r\n            </button>\r\n\r\n            {/* // <!-- Modal --> */}\r\n            <div\r\n                class=\"modal fade\"\r\n                id=\"joinFGModal\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"joinFGModalLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"joinFGModalLabel\">\r\n                                Join a Family Group\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => resetInputs()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form\r\n                                onSubmit={onSubmitForm}\r\n                                id=\"join-family-group\"\r\n                            >\r\n                                <lable\r\n                                    htmlFor=\"familyName\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Family Group Name\r\n                                    <input\r\n                                        className=\" form-control mt-1 mb-1\"\r\n                                        type=\"character\"\r\n                                        name=\"familyName\"\r\n                                        placeholder=\"\"\r\n                                        value={familyName}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                    Family Group Password\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"password\"\r\n                                        name=\"familyPassword\"\r\n                                        placeholder=\"\"\r\n                                        value={familyPassword}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                type=\"submit\"\r\n                                class=\"btn btn-primary\"\r\n                                form=\"join-family-group\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinFamilyGroup\r\n","import React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst CreateFamilyGroup = ({ setAuth, reader, setFamGroup, setInFamGroup }) => {\r\n    // const { family_name, reader_id, fg_password } = req.body;\r\n    const [inputs, setInputs] = useState({\r\n        familyName: '',\r\n        familyPassword: '',\r\n        confirmPassword: '',\r\n    })\r\n\r\n    const { familyName, familyPassword, confirmPassword } = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setInputs({\r\n            familyName: '',\r\n            familyPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n    }\r\n\r\n    const checkPassword = (familyPassword, confirmPassword) => {\r\n        if (familyPassword !== confirmPassword) {\r\n            return toast.error('Password does not match. Please try again.')\r\n        } else {\r\n            console.log('password matches')\r\n        }\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        console.log('you submitted something.')\r\n        let family_name = familyName\r\n        let fg_password = familyPassword\r\n        let reader_id = reader.id\r\n        try {\r\n            const body = { family_name, fg_password, reader_id }\r\n            const response = await fetch('/family-group/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n            if (parseRes.status === 401) {\r\n                return toast.error('family name already taken!')\r\n            }\r\n            const familyName = parseRes.family_name\r\n            setFamGroup({ family_name: familyName }) //will this work?\r\n            setInFamGroup(true)\r\n            window.location = '/'\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Button trigger modal  */}\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#createFGModal\"\r\n            >\r\n                Create Family Group\r\n            </button>\r\n\r\n            {/* // <!-- Modal --> */}\r\n            <div\r\n                class=\"modal fade\"\r\n                id=\"createFGModal\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"createFGModalLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"createFGModalLabel\">\r\n                                Create a Family Group\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => resetInputs()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form\r\n                                onSubmit={onSubmitForm}\r\n                                id=\"create-family-group\"\r\n                            >\r\n                                <lable\r\n                                    htmlFor=\"familyName\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Name Family Group\r\n                                    <input\r\n                                        className=\" form-control mt-1 mb-1\"\r\n                                        type=\"character\"\r\n                                        name=\"familyName\"\r\n                                        placeholder=\"\"\r\n                                        value={familyName}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                    Create Password for Family Group\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"password\"\r\n                                        name=\"familyPassword\"\r\n                                        placeholder=\"\"\r\n                                        value={familyPassword}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                    Confirm Password\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        placeholder=\"\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                onClick={() => resetInputs()}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                data-dismiss=\"modal\"\r\n                                type=\"submit\"\r\n                                class=\"btn btn-primary\"\r\n                                form=\"create-family-group\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFamilyGroup\r\n","import React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst CreateAdditionalReader = ({\r\n    setAuth,\r\n    reader,\r\n    adReaders,\r\n    setAdReaders,\r\n    famGroup,\r\n    setCheckAdReaders,\r\n    checkAdReaders,\r\n    leaveFG,\r\n}) => {\r\n    const [input, setInput] = useState({\r\n        name: '',\r\n    })\r\n\r\n    const name = input.name\r\n\r\n    const toggleCheck = () => {\r\n        if (checkAdReaders) {\r\n            setCheckAdReaders(false)\r\n        } else {\r\n            setCheckAdReaders(true)\r\n        }\r\n    }\r\n\r\n    const resetInput = () => {\r\n        setInput({ name: '' })\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault()\r\n        setInput({ name: e.target.value })\r\n    }\r\n\r\n    const addAdReaders = () => {\r\n        setAdReaders([\r\n            ...adReaders,\r\n            {\r\n                name: name,\r\n                chapters_read: 0,\r\n                books_read: 0,\r\n                verses_memorized: 0,\r\n            },\r\n        ]) //somehow update list of additional readers??\r\n    }\r\n\r\n    const adReaderJoinFG = async (adReaderId) => {\r\n        let ad_reader_id = adReaderId\r\n        let fg_id = famGroup.id\r\n        console.log(\r\n            `I'm in the adReaderJoinFG func: ${ad_reader_id} ${fg_id}...`\r\n        )\r\n        try {\r\n            const body = { ad_reader_id, fg_id }\r\n            const joinFG = await fetch('/family-group/add-additional-reader', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseJoinFG = await joinFG.json()\r\n            console.log(parseJoinFG)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let reader_id = reader.id\r\n            const body = { name, reader_id }\r\n            if (!name) {\r\n                throw new Error('New reader must have a name!')\r\n            }\r\n            const newAdReader = await fetch('/additional-readers', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await newAdReader.json()\r\n            console.log(parseRes.ad_reader_id)\r\n            if (parseRes) {\r\n                await adReaderJoinFG(parseRes.ad_reader_id, famGroup.id)\r\n                addAdReaders() //will this work???\r\n                resetInput()\r\n                toggleCheck()\r\n            } else {\r\n                console.log(\"adREaderJoinFG didn't work\")\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n            toast.error(err.message)\r\n        }\r\n\r\n        return console.log('you submitted something')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-primary btn-sm\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#make-additional-reader\"\r\n                >\r\n                    Add Family Group Member\r\n                </button>\r\n                <button\r\n                    button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm\"\r\n                    onClick={() => leaveFG()}\r\n                >\r\n                    Leave Family Group\r\n                </button>\r\n            </div>\r\n\r\n            {/* // <!-- Modal --> */}\r\n            <div\r\n                class=\"modal fade\"\r\n                id=\"make-additional-reader\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"make-additional-readerLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5\r\n                                class=\"modal-title\"\r\n                                id=\"make-additional-readerLabel\"\r\n                            >\r\n                                Create a new Family Group Member\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                // onClick={() => resetInput()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form\r\n                                onSubmit={onSubmitForm}\r\n                                id=\"make-additional-readerform\"\r\n                            >\r\n                                <lable\r\n                                    htmlFor=\"familyName\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Name the new member.\r\n                                    <input\r\n                                        className=\" form-control mt-1 mb-1\"\r\n                                        type=\"character\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"\"\r\n                                        value={name}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                onClick={() => resetInput()}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                type=\"submit\"\r\n                                data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary\"\r\n                                form=\"make-additional-readerform\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAdditionalReader\r\n","import React from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst DeleteAdReader = ({\r\n    setAuth,\r\n    adReader,\r\n    reader,\r\n    adReaders,\r\n    setAdReaders,\r\n    famGroup,\r\n}) => {\r\n    console.log(adReader)\r\n    const deleteAdReader = async () => {\r\n        //possible delete adReader from list\r\n        let reader_id = reader.id\r\n        let ad_reader_id = adReader.ad_reader_id\r\n        let fg_id = famGroup.id\r\n        try {\r\n            const body = { reader_id, ad_reader_id, fg_id }\r\n            const response = await fetch('/additional-readers', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            console.log(response.status)\r\n            if (response.status === 403) {\r\n                return toast.error(\r\n                    'You must be creator of reader to delete reader.'\r\n                )\r\n            }\r\n            const newList = adReaders.filter(\r\n                (addReader) => addReader.ad_reader_id !== ad_reader_id\r\n            )\r\n            setAdReaders(newList)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            style={{ float: 'right' }}\r\n            className=\"btn btn-sm btn-danger\"\r\n            onClick={() => deleteAdReader()}\r\n        >\r\n            Delete Reader\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteAdReader\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport ReportAdReaderReading from './ReportAdReaderReading'\r\nimport JoinFamilyGroup from './JoinFamilyGroup'\r\nimport CreateFamilyGroup from './CreateFamilyGroup'\r\nimport CreateAdditionalReader from './CreateAdditionalReader'\r\nimport DeleteAdReader from './DeleteAdReader'\r\n\r\nconst FamilyGroup = ({ setAuth, reader, displayTotal, setDisplayTotal }) => {\r\n    const [inFamGroup, setInFamGroup] = useState(false)\r\n    const [famGroup, setFamGroup] = useState({})\r\n    const [adReaders, setAdReaders] = useState([\r\n        {\r\n            name: undefined,\r\n            chapters_read: '',\r\n            books_read: '',\r\n            verses_memorized: '',\r\n        },\r\n    ])\r\n    const [checkAdReaders, setCheckAdReaders] = useState(true)\r\n\r\n    //get reader's family group\r\n    const getFamilyGroup = async () => {\r\n        try {\r\n            const familyGroup = await fetch('/family-group', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n            if (familyGroup.status === 401) {\r\n                console.log('You are not in a family group')\r\n                setLoading(false)\r\n\r\n                return\r\n            }\r\n            console.log(familyGroup)\r\n            const parseRes = await familyGroup.json()\r\n            setFamGroup(parseRes)\r\n            setInFamGroup(true)\r\n            setLoading(false)\r\n            console.log(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //allow reader to leave family group\r\n    const leaveFG = async () => {\r\n        let reader_id = reader.id\r\n        let fg_id = famGroup.id\r\n        try {\r\n            const body = { reader_id, fg_id }\r\n            const request = await fetch('/family-group/remove-reader', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            let parsRes = await request.json()\r\n            console.log(parsRes)\r\n            // setInFamilyGroup(false);\r\n            window.location = '/'\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFamilyGroup()\r\n    }, [])\r\n\r\n    //Get Additional Readers: ...\r\n    const getAdditionalReader = async () => {\r\n        try {\r\n            const getAdditionalReader = await fetch('/additional-readers', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n            const parseRes = await getAdditionalReader.json()\r\n            setAdReaders(parseRes)\r\n            console.log(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getAdditionalReader()\r\n    }, [checkAdReaders]) //might try adding adReaders to dependencies, so that it refreshes with an ad_reader_id?\r\n\r\n    // console.log(adReaders);\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {loading ? (\r\n                <h4>loading...</h4>\r\n            ) : (\r\n                <div>\r\n                    {!inFamGroup ? (\r\n                        <div className=\"form-control my-2\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <p>\r\n                                    You are not in a family Group yet. Family\r\n                                    Groups allows you to report for readers who\r\n                                    are not able to make reading reports for\r\n                                    themselves (such as children)\r\n                                </p>\r\n                                <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                                    <JoinFamilyGroup\r\n                                        setAuth={setAuth}\r\n                                        reader={reader}\r\n                                    />\r\n                                    <CreateFamilyGroup\r\n                                        setAuth={setAuth}\r\n                                        reader={reader}\r\n                                        setFamGroup={setFamGroup}\r\n                                        setInFamGroup={setInFamGroup}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <div className=\"family-title\">\r\n                                <p>\r\n                                    Family Group:{' '}\r\n                                    <strong>{famGroup.family_name}</strong>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"family-group\">\r\n                                {console.log(adReaders)}\r\n                                {adReaders.map((adReader, index) => (\r\n                                    <div className=\"family-member\">\r\n                                        <h4\r\n                                            key={index}\r\n                                            style={{\r\n                                                backgroundColor:\r\n                                                    'rgba(252, 169, 3, .25)',\r\n                                            }}\r\n                                        >\r\n                                            {adReader.name}:{' '}\r\n                                        </h4>\r\n                                        <Fragment key={index + 1}>\r\n                                            <ReportAdReaderReading\r\n                                                adReader={adReader}\r\n                                                adReaders={adReaders}\r\n                                                setAdReaders={setAdReaders}\r\n                                                displayTotal={displayTotal}\r\n                                                setDisplayTotal={\r\n                                                    setDisplayTotal\r\n                                                }\r\n                                            />{' '}\r\n                                            <DeleteAdReader\r\n                                                setAuth={setAuth}\r\n                                                adReader={adReader}\r\n                                                setAdReaders={setAdReaders}\r\n                                                adReaders={adReaders}\r\n                                                reader={reader}\r\n                                                setCheckAdReaders={\r\n                                                    setCheckAdReaders\r\n                                                }\r\n                                                famGroup={famGroup}\r\n                                            />\r\n                                        </Fragment>\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"family-options\">\r\n                                    <CreateAdditionalReader\r\n                                        setAuth={setAuth}\r\n                                        reader={reader}\r\n                                        adReaders={adReaders}\r\n                                        setAdReaders={setAdReaders}\r\n                                        famGroup={famGroup}\r\n                                        setCheckAdReaders={setCheckAdReaders}\r\n                                        checkAdReaders={checkAdReaders}\r\n                                        leaveFG={leaveFG}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FamilyGroup\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n// import { Link } from \"react-router-dom\";\r\nimport './Dashboard.css'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport FindChallenge from './FindChallenge'\r\nimport ReaderChallenges from './ReaderChallenges'\r\nimport ChallengeDashboard from './ChallengeDashboard'\r\nimport ReaderInfo from './ReaderInfo'\r\nimport ReportReading from './ReportReading'\r\nimport FamilyGroup from './FamilyGroup'\r\n\r\nconst Dashboard = ({ setAuth }) => {\r\n    const [reader, setReader] = useState('')\r\n    const [inReadingChallenge, setInReadingChallenge] = useState(false)\r\n    const [readersChallenges, setReadersChallenges] = useState([])\r\n    const [createChallenge, setCreateChallenge] = useState(false)\r\n    const [familyGroupState, setFamilyGroupState] = useState(false)\r\n    //Get the Reader's info\r\n    console.log(readersChallenges)\r\n    async function getReader() {\r\n        try {\r\n            const response = await fetch('/dashboard/', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n\r\n            const parseRes = await response.json()\r\n            setReader(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //Check if reader is in challenge\r\n    async function checkChallenge() {\r\n        try {\r\n            const response = await fetch(\r\n                '/reader-dashboard/reader-challenge-id/',\r\n                {\r\n                    method: 'GET',\r\n                    headers: { token: localStorage.token },\r\n                }\r\n            )\r\n\r\n            const parseRes = await response.json()\r\n            if (parseRes.length !== 0) {\r\n                setInReadingChallenge(true)\r\n                setReadersChallenges(parseRes)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        localStorage.removeItem('token')\r\n        setAuth(false)\r\n        toast.success('You logged out successfully!')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getReader()\r\n        checkChallenge()\r\n    }, [inReadingChallenge])\r\n\r\n    const toggleFG = () => {\r\n        familyGroupState === false\r\n            ? setFamilyGroupState(true)\r\n            : setFamilyGroupState(false)\r\n    }\r\n\r\n    const [displayTotal, setDisplayTotal] = useState({\r\n        chapters_read: '',\r\n        books_read: '',\r\n        verses_memorized: '',\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"nav-container\">\r\n                <ReaderInfo reader={reader} />\r\n                <div>\r\n                    <ReportReading\r\n                        setAuth={setAuth}\r\n                        reader={reader}\r\n                        setReader={setReader}\r\n                        toggleFG={() => toggleFG()}\r\n                    />\r\n                </div>\r\n            </nav>\r\n            <main>\r\n                {familyGroupState && (\r\n                    <FamilyGroup\r\n                        setAuth={setAuth}\r\n                        reader={reader}\r\n                        setDisplayTotal={setDisplayTotal}\r\n                        displayTotal={displayTotal}\r\n                    />\r\n                )}\r\n                {!createChallenge && inReadingChallenge && (\r\n                    <>\r\n                        <ReaderChallenges\r\n                            reader={reader}\r\n                            getReader={getReader}\r\n                            setAuth={setAuth}\r\n                            readersChallenges={readersChallenges}\r\n                            setReadersChallenges={setReadersChallenges}\r\n                            setInReadingChallenge={setInReadingChallenge}\r\n                            displayTotal={displayTotal}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {!createChallenge && (\r\n                    <Fragment>\r\n                        <div className=\"form-control mb-5\">\r\n                            <FindChallenge\r\n                                setAuth={setAuth}\r\n                                readersChallenges={readersChallenges}\r\n                                setReadersChallenges={setReadersChallenges}\r\n                                setInReadingChallenge={setInReadingChallenge}\r\n                                checkChallenge={checkChallenge}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-outline-info\"\r\n                            onClick={() => setCreateChallenge(true)}\r\n                        >\r\n                            Create Challenge\r\n                        </button>\r\n                    </Fragment>\r\n                )}\r\n                <div className=\"mt-5\">\r\n                    {createChallenge && (\r\n                        <ChallengeDashboard\r\n                            setAuth={setAuth}\r\n                            setCreateChallenge={setCreateChallenge}\r\n                            reader={reader}\r\n                        />\r\n                    )}\r\n                </div>\r\n                {/* <Link to={\"/challenge-dashboard\"}>Create Challenge</Link> */}\r\n\r\n                <button\r\n                    className=\"btn btn-warning text-white btn-sm mb-5\"\r\n                    onClick={(e) => logout(e)}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Register = ({ setAuth }) => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        user_password: '',\r\n        first_name: '',\r\n        last_name: '',\r\n    })\r\n    const { email, user_password, first_name, last_name } = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmiForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { email, user_password, first_name, last_name }\r\n            const response = await fetch('/auth/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n            if (parseRes.token) {\r\n                localStorage.setItem('token', parseRes.token)\r\n                setAuth(true)\r\n                toast.success('Registered Successfully')\r\n            } else {\r\n                setAuth(false)\r\n                toast.error(parseRes)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    //Building the form. Form inputs must be consisistant with req.body of the serve i.e. the name of the inputs must the be the same as the keys for the request body\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Register</h1>\r\n            <form onSubmit={onSubmiForm}>\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First Name\"\r\n                    value={first_name}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={last_name}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control my-3\"\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"password\"\r\n                    name=\"user_password\"\r\n                    placeholder=\"Password\"\r\n                    value={user_password}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-success btn-block\">Submit</button>\r\n            </form>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nconst Login = ({ setAuth }) => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        user_password: '',\r\n    })\r\n\r\n    const { email, user_password } = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { email, user_password }\r\n            const response = await fetch('/auth/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            console.log(`body: ${body}, response: ${response}`)\r\n            const parseRes = await response.json()\r\n\r\n            if (parseRes.token) {\r\n                localStorage.setItem('token', parseRes.token)\r\n                setAuth(true)\r\n                toast.success('login successfull!')\r\n            } else {\r\n                setAuth(false)\r\n                toast.error(parseRes)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Login to start reporting!</h1>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"user_password\"\r\n                    placeholder=\"Password\"\r\n                    value={user_password}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-success btn-block my-2\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            <Link to=\"/register\">Register</Link>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport './App.css'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n//components\r\n\r\nimport Dashboard from './components/Dashboard'\r\nimport Register from './components/Register'\r\nimport Login from './components/Login'\r\nimport ChallengeDashboard from './components/ChallengeDashboard'\r\nimport ReaderInfo from './components/ReaderInfo'\r\n\r\ntoast.configure()\r\n\r\nfunction App() {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\r\n    const setAuth = (boolean) => {\r\n        setIsAuthenticated(boolean)\r\n    }\r\n\r\n    async function isAuth() {\r\n        try {\r\n            const response = await fetch('/auth/is-verify', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n            const parseRes = await response.json()\r\n\r\n            parseRes === true\r\n                ? setIsAuthenticated(true)\r\n                : setIsAuthenticated(false)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        isAuth()\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n            <Router>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/login\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <Login {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/dashboard\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <Login {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/dashboard\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/register\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <Register {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <Dashboard {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/challenge-dashboard\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <ChallengeDashboard\r\n                                        {...props}\r\n                                        setAuth={setAuth}\r\n                                    />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/readers/:id\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <ReaderInfo {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"*\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <Dashboard {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}