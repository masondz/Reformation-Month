{"version":3,"sources":["components/FindChallenge.js","components/ChallengeTotal.js","components/Leaderboard.js","components/EditChallenge2.js","components/ReaderChallenges.js","components/ChallengeDashboard.js","components/ReaderInfo.js","components/ReportReading.js","components/ReportAdReaderReading.js","components/JoinFamilyGroup.js","components/CreateFamilyGroup.js","components/CreateAdditionalReader.js","components/DeleteAdReader.js","components/AdReadFindChall.js","components/AdReaderChallenge.js","components/FamilyGroup.js","components/Dashboard.js","components/Register.js","components/Login.js","components/ForgotPassword.js","components/ResetPassword.js","App.js","index.js"],"names":["FindChallenge","setAuth","inReadingChallenge","setInReadingChallenge","checkChallenge","setReadersChallenges","readersChallenges","setFindingChallenge","toggleFC","useState","challengeList","setChallengeList","challenge_name","id","organization","inputs","setInputs","a","fetch","method","headers","token","localStorage","response","json","parseRes","console","error","message","useEffect","getChallenges","readerId","setReaderId","getReaderId","i","length","updateInputs","onSubmit","e","preventDefault","body","reader_id","challenge_id","JSON","stringify","then","results","log","status","toast","success","className","onClick","style","visibility","htmlFor","value","onChange","target","list","name","placeholder","map","challenge","goal","ChallengeTotal","setCalculating","reader","displayTotal","total","setTotal","progress","setProgress","readerCount","setReaderCount","getReaderCount","getCount","challenge_type","getTotal","getTotals","chapters_read","books_read","verses_memorized","width","Leaderboard","board","setBoard","leaderboard","values","Object","getLeaderboard","first_name","last_name","EditChallenge2","originalInputs","onDelete","choice","window","confirm","deleteChallenge","location","warning","onRadioClick","updateChallenge","messages","jsxId","targetId","type","class","data-toggle","data-target","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","data-dismiss","disabled","ReaderChallenges","versus_memorized","calculating","removeReader","filter","index","challege_id","toString","challenge_admin","ChallengeDashboard","setCreateChallenge","newChallengeId","setNewChallengeId","addReader","onSubmitForm","required","autoComplete","ReaderInfo","ReportReading","setReader","toggleFG","findingChallenge","chaptersTotal","setChaptersTotal","booksTotal","setBooksTotal","versesTotal","setVersesTotal","challengeType","setChallengeType","resetAll","updateTotals","newTotal","Number","thisChallengeType","res","color","ReportAdReaderReading","adReader","setDisplayTotal","adReaderTotal","setAdReaderTotal","resetInputs","ad_reader_id","JoinFamilyGroup","familyName","familyPassword","family_name","fg_password","data-bs-toggle","data-bs-target","form","CreateFamilyGroup","setFamGroup","setInFamGroup","confirmPassword","setTimeout","CreateAdditionalReader","adReaders","setAdReaders","famGroup","setCheckAdReaders","checkAdReaders","leaveFG","input","setInput","resetInput","adReaderJoinFG","adReaderId","fg_id","joinFG","parseJoinFG","Error","newAdReader","button","DeleteAdReader","deleteAdReader","document","querySelector","newList","float","AdReadFindChall","challenges","setChallenges","getAdReaderChallenges","AdReaderChallenges","setAdReaderName","editChallenges","setEditChallenges","toggleEdit","onRemove","adreader_id","challengeId","FamilyGroup","inFamGroup","undefined","getFamilyGroup","familyGroup","setLoading","request","parsRes","getAdditionalReader","loading","readers","sentence","primaryReaders","primary_readers","backgroundColor","AdReaderChallenge","Dashboard","createChallenge","familyGroupState","setFamilyGroupState","getReader","findChallenge","removeItem","logout","Register","email","user_password","confirm_password","onSubmiForm","setItem","to","Login","ForgotPassword","setEmail","showNullError","setShowNullError","showError","setShowError","messageFromServer","setMessageFromServer","sending","setSending","sendEmail","ResetPassword","updated","setUpdated","isLoading","setIsLoading","setError","url","href","start","lastIndexOf","slice","checkResetToken","updatePassword","configure","App","isAuthenticated","setIsAuthenticated","boolean","isAuth","exact","path","render","props","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1ec533d5.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst FindChallenge = ({\r\n    setAuth,\r\n    inReadingChallenge,\r\n    setInReadingChallenge,\r\n    setReadersChallenges,\r\n    readersChallenges,\r\n    checkChallenge,\r\n    toggleFC,\r\n    setFindingChallenge,\r\n}) => {\r\n    const [challengeList, setChallengeList] = useState([])\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: '',\r\n        id: '',\r\n        organization: '',\r\n    })\r\n\r\n    const { challenge_name, id, organization } = inputs //destructure reading-challenge info\r\n    //\r\n    //\r\n    //\r\n    //Get all of the Challenges //\r\n    async function getChallenges() {\r\n        try {\r\n            const response = await fetch('/find-challenges', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n\r\n            const parseRes = await response.json()\r\n            setChallengeList(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChallenges()\r\n    }, [])\r\n    //\r\n    //\r\n    //\r\n    //Get the reader's ID\r\n    const [readerId, setReaderId] = useState('Blank id')\r\n\r\n    useEffect(() => {\r\n        async function getReaderId() {\r\n            try {\r\n                const response = await fetch('/dashboard/', {\r\n                    method: 'GET',\r\n                    headers: { token: localStorage.token },\r\n                })\r\n\r\n                const parseRes = await response.json()\r\n\r\n                setReaderId(parseRes.id)\r\n            } catch (err) {\r\n                console.error(err.message)\r\n            }\r\n        }\r\n        getReaderId()\r\n    }, [readerId])\r\n    //\r\n    //\r\n    //\r\n    //update inputs\r\n    useEffect(() => {\r\n        const updateInputs = () => {\r\n            for (let i = 0; i < challengeList.length; i++) {\r\n                if (challengeList[i].challenge_name === inputs.challenge_name) {\r\n                    setInputs({\r\n                        challenge_name: challengeList[i].challenge_name,\r\n                        organization: challengeList[i].organization,\r\n                        id: challengeList[i].id,\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        updateInputs()\r\n    }, [challenge_name, challengeList])\r\n    //\r\n    //\r\n    //\r\n    //Submit challenge_id and reader_id to readers_reading_challenges table in database\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const reader_id = readerId\r\n            const challenge_id = id\r\n            const body = { reader_id, challenge_id }\r\n            const response = await fetch('/find-challenges', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n\r\n                body: JSON.stringify(body),\r\n            })\r\n                .then((response) => {\r\n                    response.json().then((results) => console.log(results))\r\n                    if (response.status === 200) {\r\n                        toast.success(\r\n                            `You have joined the ${challenge_name} challenge!`\r\n                        )\r\n                        setInReadingChallenge(true)\r\n                        checkChallenge()\r\n                    } else if (response.status === 401) {\r\n                        toast.error(\r\n                            `You have already joined challenge: ${challenge_name}`\r\n                        )\r\n                    } else if (response.status === 400) {\r\n                        toast.error(`${challenge_name} does not exists`)\r\n                    }\r\n                })\r\n                .then(\r\n                    setInputs({ challenge_name: '', id: '', organization: '' })\r\n                )\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    //\r\n    //\r\n    //\r\n    //onChange function\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, challenge_name: e.target.value })\r\n    }\r\n\r\n    const [verb, setVerb] = useState('')\r\n\r\n    //   return statement\r\n    return (\r\n        <Fragment>\r\n            <form className=\"\" onSubmit={onSubmit}>\r\n                {inReadingChallenge ? (\r\n                    <p\r\n                        onClick={() => setFindingChallenge(false)}\r\n                        className=\"FC-close\"\r\n                    >\r\n                        +\r\n                    </p>\r\n                ) : (\r\n                    <p\r\n                        onClick={() => setFindingChallenge(false)}\r\n                        className=\"FC-close\"\r\n                        style={{ visibility: 'hidden' }}\r\n                    >\r\n                        +\r\n                    </p>\r\n                )}\r\n                <div className=\"row align-items-end\">\r\n                    <label htmlFor=\"chal-list\">Find a reading Challenge</label>\r\n                    <input\r\n                        value={challenge_name}\r\n                        onChange={(e) => onChange(e)}\r\n                        className=\"form-control\"\r\n                        list=\"challenge-list\"\r\n                        name=\"chal-list\"\r\n                        id=\"chal-list\"\r\n                        placeholder=\"Search for reading challenge\"\r\n                    />\r\n                    <datalist id=\"challenge-list\">\r\n                        {challengeList.map((challenge) => {\r\n                            return (\r\n                                <option\r\n                                    value={challenge.challenge_name}\r\n                                    key={challenge.id}\r\n                                >\r\n                                    {challenge.challenge}: {challenge.goal}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </datalist>\r\n                    <button className=\"btn btn-outline-success my-2\">\r\n                        Join\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FindChallenge\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst ChallengeTotal = ({\r\n    setAuth,\r\n    challenge,\r\n    setCalculating,\r\n    reader,\r\n    displayTotal,\r\n}) => {\r\n    const [total, setTotal] = useState('...')\r\n    console.log('ChallengeTotal challenge prop:' + challenge.challenge)\r\n    console.log('displayTotal challenge prop:' + displayTotal)\r\n\r\n    const [progress, setProgress] = useState(0)\r\n    const [readerCount, setReaderCount] = useState(0)\r\n\r\n    const getReaderCount = async () => {\r\n        const challenge_id = challenge.id\r\n        try {\r\n            const getCount = await fetch(\r\n                `/challenge-dashboard/readers-count/${challenge_id}`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        token: localStorage.token,\r\n                    },\r\n                }\r\n            )\r\n            const parseRes = await getCount.json()\r\n            setReaderCount(parseRes.total)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getTotals = async () => {\r\n            const challenge_id = challenge.id\r\n            const challenge_type = challenge.challenge\r\n            try {\r\n                const getTotal = await fetch(\r\n                    `/challenge-dashboard/challenge-total/${challenge_id}/${challenge_type}`,\r\n                    {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            token: localStorage.token,\r\n                        },\r\n                    }\r\n                )\r\n                const parseRes = await getTotal.json()\r\n                console.log('getTotal query' + parseRes)\r\n                setTotal(parseRes.total)\r\n                setCalculating(false)\r\n            } catch (err) {\r\n                console.error(err.message)\r\n            }\r\n        }\r\n        getTotals()\r\n        setProgress((total / challenge.goal) * 100)\r\n        getReaderCount()\r\n    }, [\r\n        total,\r\n        challenge.goal,\r\n        challenge.id,\r\n        reader.chapters_read,\r\n        reader.books_read,\r\n        reader.verses_memorized,\r\n        displayTotal.chapters_read,\r\n        displayTotal.books_read,\r\n        displayTotal.verses_memorized,\r\n    ])\r\n    console.log(progress)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>\r\n                    {total} / {challenge.goal} {challenge.challenge}\r\n                </h3>\r\n                <div className=\"progress\">\r\n                    <div\r\n                        className=\"progress-bar bg-warning\"\r\n                        style={{ width: `${progress}%` }}\r\n                    ></div>\r\n                </div>\r\n                {/* <meter id=\"goal\" min=\"0\" max={challenge.goal} value={total} /> */}\r\n            </div>\r\n            <p className=\"reader-total\">Readers: {readerCount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeTotal\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nconst Leaderboard = ({ setAuth, challenge }) => {\r\n    const [board, setBoard] = useState([])\r\n\r\n    useEffect(() => {        \r\n        const getLeaderboard = async () => {\r\n            try {\r\n                const challenge_id = challenge.id\r\n                const leaderboard = await fetch(\r\n                    `/challenge-dashboard/reader-leaderboard/${challenge_id}`,\r\n                    {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            token: localStorage.token,\r\n                        },\r\n                    }\r\n                )\r\n                let parseRes = await leaderboard.json()\r\n                let values = Object.values(parseRes); \r\n                console.log('leaderboard?' + values)\r\n                setBoard(parseRes)\r\n            } catch (err) {\r\n                console.error(err.message)\r\n            }\r\n        }\r\n        getLeaderboard()\r\n    }, [challenge.id])\r\n\r\n    return (\r\n        <div className=\"leaderboard\">\r\n        {board.map((reader) => (\r\n         <p className=\"board-entry\">{reader.first_name} {reader.last_name}: {reader.chapters_read}</p>\r\n        ))}\r\n        </div>\r\n//         <p>\r\n//             <i>Leaderboard coming soon!</i>\r\n//         </p>\r\n    )\r\n}\r\n\r\nexport default Leaderboard\r\n","// inputs may need to be defined by the recieved data in the parent state, then passed as props to EditChallenge.js\r\n\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n//third test\r\nconst EditChallenge2 = ({\r\n    challenge,\r\n    reader,\r\n    setReadersChallenges,\r\n    readersChallenges,\r\n}) => {\r\n    console.log(readersChallenges)\r\n    // console.log(challenge);\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: challenge.challenge_name,\r\n        organization: challenge.organization,\r\n        goal: challenge.goal,\r\n        challenge_type: challenge.challenge,\r\n        id: challenge.id,\r\n    })\r\n    console.log(inputs.challenge_type)\r\n    const originalInputs = {\r\n        challenge_name: challenge.challenge_name,\r\n        organization: challenge.organization,\r\n        goal: challenge.goal,\r\n        challenge_type: challenge.challenge,\r\n        id: challenge.id,\r\n    }\r\n\r\n    const onDelete = async (challenge_id) => {\r\n        const choice = window.confirm(\r\n            'Are you sure you want to delete challenge?'\r\n        )\r\n        try {\r\n            if (choice === true) {\r\n                console.log('going to delete the challenge')\r\n                const reader_id = reader.id\r\n                const challenge_name = inputs.challenge_name\r\n                console.log(challenge_name, reader_id)\r\n                const body = { reader_id, challenge_name }\r\n\r\n                console.log(readersChallenges)\r\n                const deleteChallenge = await fetch('/challenge-dashboard/', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json', //this is needed since we're sending over body content\r\n                        token: localStorage.token,\r\n                    },\r\n                    body: JSON.stringify(body),\r\n                })\r\n                const response = await deleteChallenge.json()\r\n                console.log(response)\r\n                if (deleteChallenge.status === 202) {\r\n                    window.location = '/'\r\n                } else if (deleteChallenge.status === 401) {\r\n                    toast.error(\"Challenge already doesn't exist.\")\r\n                } else if (deleteChallenge.status === 403) {\r\n                    toast.error(\r\n                        'You are not authorized to delete this challenge.'\r\n                    )\r\n                }\r\n            } else {\r\n                toast.warning('Challenge not deleted.')\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault()\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onRadioClick = (e) => {\r\n        console.log('radio clicked')\r\n        e.preventDefault()\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    //work on submitting changes\r\n    // console.log(inputs);\r\n    const updateChallenge = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const reader_id = reader.id\r\n            const { challenge_name, organization, challenge_type, goal, id } =\r\n                inputs\r\n            const body = {\r\n                reader_id,\r\n                challenge_name,\r\n                organization,\r\n                challenge_type,\r\n                goal,\r\n                id,\r\n            }\r\n            console.log(body)\r\n            const response = await fetch('/challenge-dashboard/', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            if (response.status === 403) {\r\n                return toast.error(\r\n                    'You are not authorized to change this challenge'\r\n                )\r\n            }\r\n            window.location = '/'\r\n            toast.success('Reading Challenge updated!')\r\n        } catch (err) {\r\n            console.error(err.messages)\r\n        }\r\n    }\r\n\r\n    const jsxId = `id${inputs.id}`\r\n    const targetId = `#id${inputs.id}`\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                class=\"challenge-edit\"\r\n                data-toggle=\"modal\"\r\n                data-target={targetId}\r\n            >\r\n                Edit\r\n            </button>\r\n            <div\r\n                className=\"modal fade\"\r\n                id={jsxId}\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"edit-challenge\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h3 class=\"modal-title\" id={jsxId}>\r\n                                Edit Challenge {inputs.challenge_name}\r\n                            </h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setInputs(originalInputs)}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form className=\"form-control\">\r\n                                <div className=\"form-control bg-light text-black\">\r\n                                    <lable htmlFor=\"goal\" className=\"mr-2\">\r\n                                        Goal:\r\n                                    </lable>\r\n                                    <input\r\n                                        className=\"form-control mt-1\"\r\n                                        type=\"number\"\r\n                                        name=\"goal\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={inputs.goal}\r\n                                    />\r\n                                </div>\r\n                                <br></br>\r\n                                <lable\r\n                                    htmlFor=\"organization\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Organization:\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"text\"\r\n                                        name=\"organization\"\r\n                                        value={inputs.organization}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                                <br></br>\r\n                                <div className=\"form-control bg-light\">\r\n                                    Challenge Type:\r\n                                    <br></br>\r\n                                    <h4 className=\"OptionSign border border-secondary\">\r\n                                        {inputs.challenge_type}\r\n                                    </h4>\r\n                                    <div class=\"btn-group ChallengeType bg-white\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-outline-secondary\"\r\n                                            name=\"challenge_type\"\r\n                                            onClick={(e) => onRadioClick(e)}\r\n                                            value=\"chapters\"\r\n                                        >\r\n                                            Chapters\r\n                                        </button>\r\n                                        <button\r\n                                            disabled\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-outline-secondary\"\r\n                                            value=\"books\"\r\n                                            name=\"challenge_type\"\r\n                                            onClick={(e) => onRadioClick(e)}\r\n                                        >\r\n                                            Books\r\n                                        </button>\r\n                                        <button\r\n                                            disabled\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-outline-secondary\"\r\n                                            value=\"verses\"\r\n                                            name=\"challenge_type\"\r\n                                            onClick={(e) => onRadioClick(e)}\r\n                                        >\r\n                                            Verses\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <br></br>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary\"\r\n                                onClick={(e) => updateChallenge(e)}\r\n                            >\r\n                                Save changes\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-danger\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => {\r\n                                    onDelete()\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditChallenge2\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport ChallengeTotal from './ChallengeTotal'\r\n\r\nimport Leaderboard from './Leaderboard.js'\r\n\r\nimport EditChallenge from './EditChallenge'\r\nimport EditChallenge2 from './EditChallenge2'\r\n\r\nconst ReaderChallenges = ({\r\n    setAuth,\r\n    reader,\r\n    readersChallenges,\r\n    setReadersChallenges,\r\n    setInReadingChallenge,\r\n    displayTotal,\r\n}) => {\r\n    // console.log(readersChallenges);\r\n    console.log('ReadeChallenges.js:displayTotal -' + displayTotal)\r\n    const {\r\n        //destructer reader that is passed down by props from Dashboard\r\n        first_name,\r\n        last_name,\r\n        chapters_read,\r\n        books_read,\r\n        versus_memorized,\r\n        id,\r\n    } = reader\r\n\r\n    const [calculating, setCalculating] = useState(false)\r\n    const toggleCa = () => {\r\n        calculating === true ? setCalculating(false) : setCalculating(true)\r\n    }\r\n\r\n    const [total, setTotal] = useState('...')\r\n\r\n    //Remove reader from reading challenge\r\n    const removeReader = async (reader_id, challenge_id) => {\r\n        try {\r\n            const readerChallenge = await fetch(\r\n                `/reader-dashboard/reader-challenge-id/?reader_id=${reader_id}&challenge_id=${challenge_id}`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        token: localStorage.token,\r\n                    },\r\n                }\r\n            )\r\n            await setReadersChallenges(\r\n                readersChallenges.filter(\r\n                    (challenge) => challenge.id !== challenge_id\r\n                )\r\n            )\r\n            toast.warning('You have left the reading challenge.')\r\n            if (readersChallenges.length === 0) {\r\n                setInReadingChallenge(false)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (readersChallenges.length === 0) {\r\n            setInReadingChallenge(false)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"my-2\">\r\n            {readersChallenges.map((challenge, index) => {\r\n                return (\r\n                    <Fragment key={challenge.id.toString()}>\r\n                        <div className=\"challenge-card\">\r\n                            <div className=\"challenge-content\">\r\n                                <div className=\"challenge-titles\">\r\n                                    <p>{challenge.organization}</p>\r\n                                    <h3 value={challenge.id} key={110}>\r\n                                        {challenge.challenge_name}\r\n                                    </h3>\r\n                                    <div\r\n                                        key={(\r\n                                            challenge.challege_id + 1\r\n                                        ).toString()}\r\n                                    >\r\n                                        {calculating ? (\r\n                                            '...'\r\n                                        ) : (\r\n                                            <ChallengeTotal\r\n                                                reader={reader}\r\n                                                setAuth={setAuth}\r\n                                                challenge={challenge}\r\n                                                setTotal={setTotal}\r\n                                                setCalculating={setCalculating}\r\n                                                displayTotal={displayTotal}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                {reader.id !== challenge.challenge_admin ? (\r\n                                    <div className=\"leave-challenge\">\r\n                                        <p\r\n                                            onClick={() =>\r\n                                                removeReader(\r\n                                                    reader.id,\r\n                                                    challenge.id\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            Leave Challenge\r\n                                        </p>\r\n                                    </div>\r\n                                ) : (\r\n                                    <Fragment key={challenge.id.toString()}>\r\n                                        <Leaderboard\r\n                                            setAuth={setAuth}\r\n                                            challenge={challenge}\r\n                                        />\r\n                                        <EditChallenge2\r\n                                            challenge={challenge}\r\n                                            reader={reader}\r\n                                            setReadersChallenges={\r\n                                                setReadersChallenges\r\n                                            }\r\n                                            readersChallenges={\r\n                                                readersChallenges\r\n                                            }\r\n                                        />\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReaderChallenges\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ChallengeDashboard = ({ setAuth, setCreateChallenge, reader }) => {\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: '',\r\n        organization: '',\r\n        challenge_type: 'chapters',\r\n        goal: '',\r\n    })\r\n    const [newChallengeId, setNewChallengeId] = useState('')\r\n\r\n    //variables from state\r\n    const { challenge_name, organization, challenge_type, goal } = inputs\r\n\r\n    //input fields for from\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    //radio buttons for challenge-type\r\n    const onRadioClick = (e) => {\r\n        console.log('radio clicked')\r\n        setInputs({ ...inputs, challenge_type: e.target.value })\r\n    }\r\n\r\n    const addReader = async () => {\r\n        const reader_id = reader.id\r\n        const challenge_id = newChallengeId\r\n        const body = { reader_id, challenge_id }\r\n        const response = await fetch('/find-challenges', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: localStorage.token,\r\n            },\r\n\r\n            body: JSON.stringify(body),\r\n        })\r\n        console.log(`reader_id: ${reader_id} challenge_id: ${challenge_id}`)\r\n        return response.json()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (newChallengeId) {\r\n            console.log('newChallengeId state is not falsey')\r\n            addReader()\r\n        }\r\n    }, [newChallengeId])\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { challenge_name, organization, challenge_type, goal }\r\n            const response = await fetch('/challenge-dashboard', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            if (response.status === 401) {\r\n                return toast.error('Challenge Name already exists')\r\n            }\r\n            await response\r\n                .json()\r\n                .then((response) => setNewChallengeId(response.id))\r\n                .then(() => console.log(newChallengeId))\r\n                .then(() => addReader())\r\n\r\n            //   const parseSecond = await addReadertoChallenge.json();\r\n            console.log(newChallengeId)\r\n            setInputs({\r\n                challenge_name: '',\r\n                organization: '',\r\n                challenge_type: 'chapters',\r\n                goal: '',\r\n            })\r\n            window.location = '/'\r\n        } catch (err) {\r\n            console.error(err.message)\r\n            toast.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>Create or Change Challenge</h3>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input\r\n                    required\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"challenge_name\"\r\n                    placeholder=\"Challenge Name\"\r\n                    value={challenge_name}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"organization\"\r\n                    placeholder=\"Organization (church name, bible study, facebook group etc.)\"\r\n                    value={organization}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <h3>Select Challenge Type</h3>\r\n                <div className=\"form-check-inline\">\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        id=\"chapters\"\r\n                        className=\"btn-check\"\r\n                        type=\"radio\"\r\n                        name=\"challenge-type\"\r\n                        onClick={(e) => onRadioClick(e)}\r\n                        value=\"chapters\"\r\n                    />\r\n                    <label\r\n                        className=\"btn btn-outline-primary\"\r\n                        htmlFor=\"chapters\"\r\n                    >\r\n                        Read Chapters\r\n                    </label>\r\n                    <input\r\n                        id=\"books\"\r\n                        disabled\r\n                        className=\"btn-check\"\r\n                        autoComplete=\"off\"\r\n                        type=\"radio\"\r\n                        name=\"challenge-type\"\r\n                        value=\"books\"\r\n                        onClick={(e) => onRadioClick(e)}\r\n                    />\r\n                    <label\r\n                        className=\"btn btn-outline-primary my-3 mx-3\"\r\n                        htmlFor=\"books\"\r\n                    >\r\n                        Read Books\r\n                    </label>\r\n                    <input\r\n                        id=\"verses\"\r\n                        disabled\r\n                        className=\"btn-check\"\r\n                        type=\"radio\"\r\n                        name=\"challenge-type\"\r\n                        value=\"verses\"\r\n                        onClick={(e) => onRadioClick(e)}\r\n                    />\r\n                    <label className=\"btn btn-outline-primary\" htmlFor=\"verses\">\r\n                        Memorize Verses\r\n                    </label>\r\n                </div>\r\n                <input\r\n                    required\r\n                    className=\"form-control my-3\"\r\n                    type=\"number\"\r\n                    name=\"goal\"\r\n                    placeholder=\"Challenge Goal\"\r\n                    value={goal}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-outline-success btn-lg mx-2\">\r\n                    Submit\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-danger btn-lg my-2\"\r\n                    onClick={() => setCreateChallenge(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChallengeDashboard\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport './ReaderInfo.css'\r\n\r\nconst ReaderInfo = ({ setAuth, reader }) => {\r\n    const { chapters_read, books_read, verses_memorized } = reader\r\n    console.log(chapters_read)\r\n    console.log(reader)\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-reader\">\r\n                <div className=\"stats\">\r\n                    <h4>Welcome {reader.first_name}:</h4>\r\n                    <p id=\"chapters\">{chapters_read} chapters</p>\r\n                    {/* <p id=\"books\">{books_read} books</p>\r\n                    <p id=\"verses\">{verses_memorized} verses</p> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div>\r\n        <div className=\"d-flex justify-content-lg-start align-items-center\">\r\n          <h2 className=\"pe-3\">Chapters: {reader.chapters_read}</h2>\r\n          <h2 className=\"pe-3\">Books: {reader.books_read}</h2>\r\n          <h2 className=\"pe-3\">Verses: {reader.verses_memorized}</h2>\r\n        </div>\r\n      </div> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReaderInfo\r\n","//add adReader to ReportReading parameters. [X]\r\n//if adReader is undefined, leave reader to reader and set endPoint to '/submit-report' [X]\r\n//else, set reader to adReader [X]\r\n//set endPoint to '/additional-readers' [ ]\r\n\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\n\r\nconst ReportReading = ({\r\n    setAuth,\r\n    reader,\r\n    setReader,\r\n    toggleFG,\r\n    toggleFC,\r\n    findingChallenge,\r\n    inReadingChallenge,\r\n}) => {\r\n    const [reporting, setReporting] = useState(false)\r\n    const [chaptersTotal, setChaptersTotal] = useState('')\r\n    const [booksTotal, setBooksTotal] = useState('')\r\n    const [versesTotal, setVersesTotal] = useState('')\r\n    const [challengeType, setChallengeType] = useState('')\r\n\r\n    const [endPoint, setEndPoint] = useState('')\r\n\r\n    const resetAll = () => {\r\n        setChaptersTotal('')\r\n        setBooksTotal('')\r\n        setVersesTotal('')\r\n    }\r\n\r\n    const updateTotals = (total, challengeType) => {\r\n        let newTotal = reader[challengeType] + Number(total)\r\n        setReader({\r\n            ...reader,\r\n            [challengeType]: newTotal,\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        try {\r\n            const thisChallengeType = challengeType\r\n            const challenge_type = challengeType\r\n            const reader_id = reader.id\r\n            let total\r\n            // check which challenge type it is\r\n            if (thisChallengeType === 'chapters_read') {\r\n                total = chaptersTotal\r\n                updateTotals(total, challengeType)\r\n            } else if (thisChallengeType === 'books_read') {\r\n                total = booksTotal\r\n                updateTotals(total, challengeType)\r\n            } else {\r\n                total = versesTotal\r\n                updateTotals(total, challengeType)\r\n            }\r\n            const body = { challenge_type, total, reader_id }\r\n            const response = await fetch(`/submit-report/`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const res = await response.json()\r\n            console.log(res)\r\n            resetAll()\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        if (e.target.name === 'chapters_read') {\r\n            return setChaptersTotal(e.target.value)\r\n        } else if (e.target.name === 'books_read') {\r\n            return setBooksTotal(e.target.value)\r\n        } else {\r\n            setVersesTotal(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"nav-buttons\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"nav-btn\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#thing\"\r\n                >\r\n                    Report Reading\r\n                </button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"nav-btn\"\r\n                    onClick={() => toggleFG()}\r\n                >\r\n                    Family Group\r\n                </button>\r\n                {!findingChallenge && inReadingChallenge && (\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"nav-btn\"\r\n                        onClick={() => toggleFC()}\r\n                    >\r\n                        More Challenges\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            <div\r\n                className=\"modal fade\"\r\n                id=\"thing\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"edit-challenge\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\" style={{ 'z-index': '2' }}>\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h3\r\n                                class=\"modal-title\"\r\n                                id=\"thing\"\r\n                                style={{ color: 'black' }}\r\n                            >\r\n                                Report Reading for {reader.first_name}\r\n                            </h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => resetAll()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form className=\"form-control\">\r\n                                <div className=\"form-control bg-light text-black\">\r\n                                    <lable htmlFor=\"Chapters\" className=\"mr-2\">\r\n                                        Chapters Read\r\n                                        <input\r\n                                            className=\"form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"chapters_read\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                            value={chaptersTotal}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            name=\"chapters_read\"\r\n                                            htmlFor=\"chapters_memorized\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-dismiss=\"modal\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable>\r\n                                </div>\r\n                                <br></br>\r\n                                {/* <lable\r\n                                    htmlFor=\"books_read\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Books Read\r\n                                    <input\r\n                                        className=\"form-control mt-1\"\r\n                                        type=\"number\"\r\n                                        name=\"books_read\"\r\n                                        value={booksTotal}\r\n                                        placeholder=\"0\"\r\n                                        onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                    />\r\n                                    <button\r\n                                        data-dismiss=\"modal\"\r\n                                        type=\"button\"\r\n                                        name=\"books_read\"\r\n                                        htmlFor=\"books_read\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={(e) => onSubmit(e)}\r\n                                    >\r\n                                        Save changes\r\n                                    </button>\r\n                                </lable>\r\n                                <br></br>\r\n                                <form>\r\n                                    <lable\r\n                                        htmlFor=\"verses_memorized\"\r\n                                        className=\"bg-light text-black form-control\"\r\n                                    >\r\n                                        Verses Memorized\r\n                                        <input\r\n                                            className=\" form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"verses_memorized\"\r\n                                            value={versesTotal}\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                        />\r\n                                        <button\r\n                                            data-dismiss=\"modal\"\r\n                                            type=\"button\"\r\n                                            name=\"verses_memorized\"\r\n                                            htmlFor=\"verses_memorized\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable> \r\n                                </form>*/}\r\n                                <div class=\"modal-footer\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReportReading\r\n","//Trying to allow values to change in report modal.\r\n//To do this, values of the inputs must have their own state, that reset to 0 after form is submitted.\r\n//I've started an initialValue state, and began coding a function. Good Luck.\r\n\r\n//if adReader is true, set reader to adReader?\r\n//if adReader is true, set endPoint to additional-reader?\r\n//else, set endPoint to submit-report?\r\n\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\n\r\nconst ReportAdReaderReading = ({\r\n    setAuth,\r\n    adReader,\r\n    displayTotal,\r\n    setDisplayTotal,\r\n}) => {\r\n    const { name, chapters_read, books_read, verses_memorized } = adReader\r\n\r\n    const [inputs, setInputs] = useState({\r\n        chapters_read: '',\r\n        books_read: '',\r\n        verses_memorized: '',\r\n    })\r\n    const [challengeType, setChallengeType] = useState('')\r\n\r\n    const [adReaderTotal, setAdReaderTotal] = useState({\r\n        chapters_read: '',\r\n        books_read: '',\r\n        verses_memorized: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        setDisplayTotal({\r\n            chapters_read: chapters_read,\r\n            books_read: books_read,\r\n            verses_memorized: verses_memorized,\r\n        })\r\n        setAdReaderTotal({\r\n            chapters_read: chapters_read,\r\n            books_read: books_read,\r\n            verses_memorized: verses_memorized,\r\n        })\r\n    }, [name, chapters_read, books_read, verses_memorized, setDisplayTotal]) //needed something to get the first reader in the list to display stuff\r\n\r\n    const updateTotals = (total, challengeType) => {\r\n        console.log(`${challengeType}: ${adReaderTotal[challengeType]}`)\r\n        let newTotal = Number(adReaderTotal[challengeType]) + Number(total) //I think this should change displayed totals\r\n        console.log(newTotal)\r\n        setAdReaderTotal({\r\n            ...adReaderTotal,\r\n            [challengeType]: newTotal,\r\n        })\r\n        setDisplayTotal({\r\n            ...displayTotal,\r\n            [challengeType]: newTotal,\r\n        })\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setInputs({\r\n            chapters_read: '',\r\n            books_read: '',\r\n            verses_memorized: '',\r\n        })\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        try {\r\n            const thisChallengeType = challengeType //for display totals\r\n            const challenge_type = challengeType //for fetch request\r\n            const ad_reader_id = adReader.ad_reader_id //for fetch request\r\n            let total //send total via fetch. Postgres will ADD it to correct challenge type\r\n            if (thisChallengeType === 'chapters_read') {\r\n                total = inputs.chapters_read\r\n                updateTotals(total, challengeType)\r\n            } else if (thisChallengeType === 'books_read') {\r\n                total = inputs.books_read\r\n                updateTotals(total, challengeType)\r\n            } else {\r\n                total = inputs.verses_memorized\r\n                updateTotals(total, challengeType)\r\n            }\r\n            const body = { challenge_type, total, ad_reader_id }\r\n            const response = await fetch(`/additional-readers`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const res = await response.json()\r\n            console.log(res)\r\n            resetInputs()\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        //this allows the inputs values to change\r\n        e.preventDefault()\r\n        setChallengeType(e.target.name)\r\n        if (e.target.name === 'chapters_read') {\r\n            return setInputs({\r\n                ...inputs,\r\n                chapters_read: e.target.value,\r\n            })\r\n        } else if (e.target.name === 'books_read') {\r\n            return setInputs({ ...inputs, books_read: e.target.value })\r\n        } else {\r\n            setInputs({ ...inputs, verses_memorized: e.target.value })\r\n        }\r\n        console.log('you changed something')\r\n    }\r\n\r\n    let jsxId = `ad${adReader.ad_reader_id}`\r\n    let targetId = `#ad${adReader.ad_reader_id}`\r\n\r\n    return (\r\n        <>\r\n            <h5>\r\n                Chapters: {adReaderTotal.chapters_read}\r\n                {/* Books:{' '}\r\n                {adReaderTotal.books_read} Verses:{' '}\r\n    {adReaderTotal.verses_memorized} */}\r\n            </h5>\r\n            <br></br>\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-toggle=\"modal\"\r\n                data-target={targetId}\r\n            >\r\n                Report Reading\r\n            </button>\r\n            <div\r\n                className=\"modal fade\"\r\n                id={jsxId}\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"edit-challenge\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h3 class=\"modal-title\" id={jsxId}>\r\n                                Report Reading for: {name}\r\n                            </h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => resetInputs()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form className=\"\">\r\n                                <div className=\"form-control bg-light text-black\">\r\n                                    <lable htmlFor=\"Chapters\" className=\"mr-2\">\r\n                                        Chapters Read\r\n                                        <input\r\n                                            className=\"form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"chapters_read\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                            value={inputs.chapters_read}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            name=\"chapters_read\"\r\n                                            htmlFor=\"chapters_read\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-dismiss=\"modal\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable>\r\n                                </div>\r\n                                {/* <br></br>\r\n                                <lable\r\n                                    htmlFor=\"books_read\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Books Read\r\n                                    <input\r\n                                        className=\"form-control mt-1\"\r\n                                        type=\"number\"\r\n                                        name=\"books_read\"\r\n                                        value={inputs.books_read}\r\n                                        placeholder=\"0\"\r\n                                        onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                    />\r\n                                    <button\r\n                                        data-dismiss=\"modal\"\r\n                                        type=\"button\"\r\n                                        name=\"books_read\"\r\n                                        htmlFor=\"books_read\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={(e) => onSubmit(e)}\r\n                                    >\r\n                                        Save changes\r\n                                    </button>\r\n                                </lable>\r\n                                <br></br>\r\n                                <form>\r\n                                    <lable\r\n                                        htmlFor=\"verses_memorized\"\r\n                                        className=\"bg-light text-black form-control\"\r\n                                    >\r\n                                        Verses Memorized\r\n                                        <input\r\n                                            className=\" form-control mt-1\"\r\n                                            type=\"number\"\r\n                                            name=\"verses_memorized\"\r\n                                            value={inputs.verses_memorized}\r\n                                            placeholder=\"0\"\r\n                                            onChange={(e) => onChange(e)} //don't change state inside JSX event listener; use callback function.\r\n                                        />\r\n                                        <button\r\n                                            data-dismiss=\"modal\"\r\n                                            type=\"button\"\r\n                                            name=\"verses_memorized\"\r\n                                            htmlFor=\"verses_memorized\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={(e) => onSubmit(e)}\r\n                                        >\r\n                                            Save changes\r\n                                        </button>\r\n                                    </lable>\r\n                                </form> */}\r\n                                <div class=\"modal-footer\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportAdReaderReading\r\n","// -> /family-group/add-reader  is the route to add reader\r\n// -> /family-group/add-additional-reader  is the rout to add additional reader\r\n\r\nimport React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst JoinFamilyGroup = ({ setAuth, reader }) => {\r\n    const [inputs, setInputs] = useState({\r\n        familyName: '',\r\n        familyPassword: '',\r\n    })\r\n\r\n    const { familyName, familyPassword } = inputs\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        console.log('you submitted something.')\r\n        let family_name = familyName\r\n        let fg_password = familyPassword\r\n        let reader_id = reader.id\r\n        try {\r\n            const body = { family_name, fg_password, reader_id }\r\n            const response = await fetch('/family-group/add-reader', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n            window.location = '/'\r\n            if (parseRes.status === 401) {\r\n                return toast.error('Password or Family Name is incorrect')\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setInputs({\r\n            familyName: '',\r\n            familyPassword: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Button trigger modal  */}\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#joinFGModal\"\r\n            >\r\n                Join A Family Group\r\n            </button>\r\n\r\n            {/* // <!-- Modal --> */}\r\n            <div\r\n                class=\"modal fade\"\r\n                id=\"joinFGModal\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"joinFGModalLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"joinFGModalLabel\">\r\n                                Join a Family Group\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => resetInputs()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form\r\n                                onSubmit={onSubmitForm}\r\n                                id=\"join-family-group\"\r\n                            >\r\n                                <lable\r\n                                    htmlFor=\"familyName\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Family Group Name\r\n                                    <input\r\n                                        className=\" form-control mt-1 mb-1\"\r\n                                        type=\"character\"\r\n                                        name=\"familyName\"\r\n                                        placeholder=\"\"\r\n                                        value={familyName}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                    Family Group Password\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"password\"\r\n                                        name=\"familyPassword\"\r\n                                        placeholder=\"\"\r\n                                        value={familyPassword}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                type=\"submit\"\r\n                                class=\"btn btn-primary\"\r\n                                form=\"join-family-group\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinFamilyGroup\r\n","import React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst CreateFamilyGroup = ({ setAuth, reader, setFamGroup, setInFamGroup }) => {\r\n    // const { family_name, reader_id, fg_password } = req.body;\r\n    const [inputs, setInputs] = useState({\r\n        familyName: '',\r\n        familyPassword: '',\r\n        confirmPassword: '',\r\n    })\r\n\r\n    const { familyName, familyPassword, confirmPassword } = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setInputs({\r\n            familyName: '',\r\n            familyPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n    }\r\n\r\n    const checkPassword = (familyPassword, confirmPassword) => {\r\n        if (familyPassword !== confirmPassword) {\r\n           toast.error('Password does not match. Please try again.')\r\n        } else {\r\n            console.log('password matches')\r\n        }\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        console.log('you submitted something.')\r\n        let family_name = familyName\r\n        let fg_password = familyPassword\r\n        let reader_id = reader.id\r\n        if (familyPassword !== confirmPassword) {\r\n             return  toast.error('Password does not match. Please try again.')\r\n        } else {\r\n        try {\r\n            const body = { family_name, fg_password, reader_id }\r\n            const response = await fetch('/family-group/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n            if (parseRes.status === 401) {\r\n                return toast.error('family name already taken!')\r\n            }\r\n            const familyName = parseRes.family_name\r\n            setFamGroup({ family_name: familyName }) //will this work?\r\n            setInFamGroup(true)\r\n            setTimeout(() => {\r\n            window.location = '/';\r\n            }, 2000);\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n       }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Button trigger modal  */}\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#createFGModal\"\r\n            >\r\n                Create Family Group\r\n            </button>\r\n\r\n            {/* // <!-- Modal --> */}\r\n            <div\r\n                class=\"modal fade\"\r\n                id=\"createFGModal\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"createFGModalLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"createFGModalLabel\">\r\n                                Create a Family Group\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => resetInputs()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form\r\n                                onSubmit={onSubmitForm}\r\n                                id=\"create-family-group\"\r\n                            >\r\n                                <lable\r\n                                    htmlFor=\"familyName\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Name Family Group\r\n                                    <input\r\n                                        className=\" form-control mt-1 mb-1\"\r\n                                        type=\"character\"\r\n                                        name=\"familyName\"\r\n                                        placeholder=\"\"\r\n                                        value={familyName}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                    Create Password for Family Group\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"password\"\r\n                                        name=\"familyPassword\"\r\n                                        placeholder=\"\"\r\n                                        value={familyPassword}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                    Confirm Password\r\n                                    <input\r\n                                        className=\" form-control mt-1\"\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        placeholder=\"\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                onClick={() => resetInputs()}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                type=\"submit\"\r\n                                class=\"btn btn-primary\"\r\n                                form=\"create-family-group\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFamilyGroup\r\n","import React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst CreateAdditionalReader = ({\r\n    setAuth,\r\n    reader,\r\n    adReaders,\r\n    setAdReaders,\r\n    famGroup,\r\n    setCheckAdReaders,\r\n    checkAdReaders,\r\n    leaveFG,\r\n}) => {\r\n    const [input, setInput] = useState({\r\n        name: '',\r\n    })\r\n\r\n    const name = input.name\r\n\r\n    const toggleCheck = () => {\r\n        if (checkAdReaders) {\r\n            setCheckAdReaders(false)\r\n        } else {\r\n            setCheckAdReaders(true)\r\n        }\r\n    }\r\n\r\n    const resetInput = () => {\r\n        setInput({ name: '' })\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault()\r\n        setInput({ name: e.target.value })\r\n    }\r\n\r\n    const addAdReaders = () => {\r\n        setAdReaders([\r\n            ...adReaders,\r\n            {\r\n                name: name,\r\n                chapters_read: 0,\r\n                books_read: 0,\r\n                verses_memorized: 0,\r\n            },\r\n        ]) //somehow update list of additional readers??\r\n    }\r\n\r\n    const adReaderJoinFG = async (adReaderId) => {\r\n        let ad_reader_id = adReaderId\r\n        let fg_id = famGroup.id\r\n        console.log(\r\n            `I'm in the adReaderJoinFG func: ${ad_reader_id} ${fg_id}...`\r\n        )\r\n        try {\r\n            const body = { ad_reader_id, fg_id }\r\n            const joinFG = await fetch('/family-group/add-additional-reader', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseJoinFG = await joinFG.json()\r\n            console.log(parseJoinFG)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let reader_id = reader.id\r\n            const body = { name, reader_id }\r\n            if (!name) {\r\n                throw new Error('New reader must have a name!')\r\n            }\r\n            const newAdReader = await fetch('/additional-readers', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await newAdReader.json()\r\n            console.log(parseRes.ad_reader_id)\r\n            if (parseRes) {\r\n                await adReaderJoinFG(parseRes.ad_reader_id, famGroup.id)\r\n                addAdReaders() //will this work???\r\n                resetInput()\r\n                toggleCheck()\r\n            } else {\r\n                console.log(\"adREaderJoinFG didn't work\")\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n            toast.error(err.message)\r\n        }\r\n\r\n        return console.log('you submitted something')\r\n    }\r\n\r\n    \r\n    \r\n \r\n    return (\r\n        <div>\r\n            <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#make-additional-reader\"\r\n                >\r\n                    Add Family Group Member\r\n                </button>\r\n                <button\r\n                    button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#leave-fg\"\r\n                    \r\n                >\r\n                    Leave Family Group\r\n                </button>\r\n            </div>\r\n\r\n            {/* // <!-- Modal FOR ADDING MEMBERS --> */}\r\n            <div\r\n                class=\"modal fade\"\r\n                id=\"make-additional-reader\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"make-additional-readerLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5\r\n                                class=\"modal-title\"\r\n                                id=\"make-additional-readerLabel\"\r\n                            >\r\n                                Create a new Family Group Member\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                // onClick={() => resetInput()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form\r\n                                onSubmit={onSubmitForm}\r\n                                id=\"make-additional-readerform\"\r\n                            >\r\n                                <lable\r\n                                    htmlFor=\"familyName\"\r\n                                    className=\"bg-light text-black form-control\"\r\n                                >\r\n                                    Name the new member.\r\n                                    <input\r\n                                        className=\" form-control mt-1 mb-1\"\r\n                                        type=\"character\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"\"\r\n                                        value={name}\r\n                                        onChange={(e) => onChange(e)}\r\n                                    />\r\n                                </lable>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                onClick={() => resetInput()}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                            <button\r\n                                type=\"submit\"\r\n                                data-dismiss=\"modal\"\r\n                                className=\"btn btn-primary\"\r\n                                form=\"make-additional-readerform\"\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n           {/* // <!-- Modal FOR leaving family group --> */}\r\n            <div\r\n                className=\"modal fade\"\r\n                id=\"leave-fg\"\r\n                tabindex=\"-1\"\r\n                aria-labelledby=\"leave-fgLabel\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                            ></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>Are you sure you want to leave Family Group?</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary\"\r\n                                data-bs-dismiss=\"modal\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                data-dismiss=\"modal\"\r\n                                className=\"btn btn-warning\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                onClick={() => leaveFG()}\r\n                            >\r\n                                Leave\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAdditionalReader\r\n","import React, {useState} from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst DeleteAdReader = ({\r\n    setAuth,\r\n    adReader,\r\n    reader,\r\n    adReaders,\r\n    setAdReaders,\r\n    famGroup,\r\n}) => {\r\n    \r\n    const [deleting, setDeleting] = useState(false);\r\n    \r\n//     const toggleDeleting = () => {\r\n//         (!deleting) ? setDeleting(true) : setDeleting(false);\r\n//     }\r\n    \r\n    //controls the modal\r\n    const modal = document.querySelector(\"#delete-adreader-modal\");\r\n        const body = document.querySelector(\"body\");\r\n  \r\n        const showModal = function (e) {\r\n            modal.classList.toggle(\"hidden\");\r\n  \r\n            if (!modal.classList.contains(\"hidden\")) {\r\n                // Disable scroll\r\n                body.style.overflow = \"hidden\";\r\n            } else {\r\n                // Enable scroll\r\n                body.style.overflow = \"auto\";\r\n            }\r\n        };\r\n    \r\n    const deleteAdReader = async () => {\r\n        //possible delete adReader from list\r\n     try {\r\n        let reader_id = reader.id\r\n        let ad_reader_id = adReader.ad_reader_id\r\n        let fg_id = famGroup.id\r\n        \r\n            const body = { reader_id, ad_reader_id, fg_id }\r\n            const response = await fetch('/additional-readers', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            console.log(response.status)\r\n            if (response.status === 403) {\r\n                return toast.error(\r\n                    'You must be creator of reader to delete reader.'\r\n                )\r\n            }\r\n            const newList = adReaders.filter(\r\n                (addReader) => addReader.ad_reader_id !== ad_reader_id\r\n            )\r\n            setAdReaders(newList)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    \r\n    let jsxId = `del-ad${adReader.ad_reader_id}`\r\n    let targetId = `#del-ad${adReader.ad_reader_id}`\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n            type=\"button\"\r\n            style={{ float: 'right' }}\r\n            className=\"delete-adreader\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target={targetId}\r\n        >\r\n            Delete Reader\r\n        </button>\r\n\r\n       <div className=\"modal fade\" id={jsxId} tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>Are you sure you want to delete member?</p>\r\n                    </div>\r\n                 <div className=\"modal-footer\">\r\n                   <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\">Cancel</button>  \r\n                   <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-warning\"\r\n                        onClick={() => deleteAdReader()}\r\n                        data-bs-dismiss=\"modal\"\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DeleteAdReader\r\n","import React, { useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst AdReadFindChall = ({\r\n    setAuth,\r\n    adReader,\r\n    setChallenges,\r\n    challenges,\r\n    getAdReaderChallenges,\r\n}) => {\r\n    const [challengeList, setChallengeList] = useState([])\r\n\r\n    async function getChallenges() {\r\n        try {\r\n            const response = await fetch('/find-challenges', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n\r\n            const parseRes = await response.json()\r\n            setChallengeList(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChallenges()\r\n    }, [])\r\n\r\n    //Submit challenge_id and reader_id to readers_reading_challenges table in database\r\n    // /additiona-readers/challenges  ...  use req.body\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const ad_reader_id = adReader.ad_reader_id\r\n            const challenge_id = id\r\n            const body = { ad_reader_id, challenge_id }\r\n            const response = await fetch('/additional-readers/challenges', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n\r\n                body: JSON.stringify(body),\r\n            })\r\n            if (response.status === 200) {\r\n                console.log(challenges)\r\n                toast.success('Member added to challenge!')\r\n                // window.location = '/'\r\n                getAdReaderChallenges()\r\n            } else if (response.status === 403) {\r\n                toast.warning('Member already in reading challenge!')\r\n            }\r\n        } catch (err) {\r\n            toast.warning('Member already in reading challenge!')\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const [inputs, setInputs] = useState({\r\n        challenge_name: '',\r\n        id: '',\r\n        organization: '',\r\n    })\r\n\r\n    const { challenge_name, id, organization } = inputs //destructure reading-challenge info\r\n    //update inputs\r\n    useEffect(() => {\r\n        const updateInputs = () => {\r\n            for (let i = 0; i < challengeList.length; i++) {\r\n                if (challengeList[i].challenge_name === inputs.challenge_name) {\r\n                    setInputs({\r\n                        challenge_name: challengeList[i].challenge_name,\r\n                        organization: challengeList[i].organization,\r\n                        id: challengeList[i].id,\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        updateInputs()\r\n    }, [challenge_name, challengeList])\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, challenge_name: e.target.value })\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} id=\"adreader-find-challenge\">\r\n                <input\r\n                    // onChange={(e) => onChange(e)}\r\n                    value={challenge_name}\r\n                    onChange={(e) => onChange(e)}\r\n                    list=\"challenge-list\"\r\n                    name=\"chal-list\"\r\n                    id=\"chal-list\"\r\n                    placeholder=\"Search for reading challenge\"\r\n                />\r\n                <datalist id=\"challenge-list\">\r\n                    {/* <option>Coming Soon!</option>\r\n                    <option>Coming Soon!</option> */}\r\n\r\n                    {challengeList.map((challenge) => {\r\n                        return (\r\n                            <option\r\n                                value={challenge.challenge_name}\r\n                                key={challenge.id}\r\n                            >\r\n                                Read {challenge.goal} Chapters\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </datalist>\r\n                <button className=\"adreader-join\">Join</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdReadFindChall\r\n","import React, { useState, useEffect } from 'react'\r\nimport AdReadFindChall from './AdReadFindChall'\r\n\r\nconst AdReaderChallenges = ({ setAuth, adReader }) => {\r\n    const [challenges, setChallenges] = useState([])\r\n    const [adReaderName, setAdReaderName] = useState('member')\r\n    const [editChallenges, setEditChallenges] = useState(false)\r\n\r\n    const toggleEdit = () => {\r\n        if (editChallenges) {\r\n            setEditChallenges(false)\r\n        } else {\r\n            setEditChallenges(true)\r\n        }\r\n    }\r\n\r\n    const adReaderId = adReader.ad_reader_id\r\n    const getAdReaderChallenges = async () => {\r\n        try {\r\n            const challenges = await fetch(\r\n                `/additional-readers/challenges/${adReaderId}`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        token: localStorage.token,\r\n                    },\r\n                }\r\n            )\r\n            let parseRes = await challenges.json()\r\n            setChallenges(parseRes)\r\n            console.log(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const onClick = () => {\r\n        setAdReaderName(adReader.name)\r\n        getAdReaderChallenges()\r\n        toggleEdit()\r\n    }\r\n\r\n    const onRemove = async (adreader_id, challengeId) => {\r\n        try {\r\n            let ad_reader_id = adreader_id\r\n            let challenge_id = challengeId\r\n            let body = { ad_reader_id, challenge_id }\r\n            console.log(body)\r\n            const readerChallenge = await fetch(\r\n                `/additional-readers/challenges`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        token: localStorage.token,\r\n                    },\r\n\r\n                    body: JSON.stringify(body),\r\n                }\r\n            )\r\n            setChallenges(\r\n                challenges.filter((challenge) => challenge.id !== challenge_id)\r\n            )\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //   useEffect(() => {\r\n    //     getChallenges();\r\n    //     console.log(challenges)\r\n    //   },[])\r\n\r\n    //   useEffect(() => {\r\n    //     if (adReader.name === undefined) {\r\n    //       console.log('The additional reader was not passed')\r\n    //       return;\r\n    //     }\r\n    //       setAdReaderName(adReader.name);\r\n    //   },[])\r\n\r\n    //    {challenges.map((challenge) => (\r\n    //         <p>{Object.entries(challenge)}</p>\r\n    //       ))}\r\n\r\n    return (\r\n        <div>\r\n            {!editChallenges ? (\r\n                <button\r\n                    className=\"adreader-button\"\r\n                    type=\"button\"\r\n                    onClick={() => onClick()}\r\n                >\r\n                    Edit Challenges\r\n                </button>\r\n            ) : (\r\n                <div className=\"adreader-challenges\">\r\n                    {challenges.map((challenge) => (\r\n                        <div className=\"challenges-container\">\r\n                            <p>\r\n                                {challenge.challenge_name} |\r\n                                <button\r\n                                    id={challenge.challenge_id}\r\n                                    className=\"adreader-remove\"\r\n                                    onClick={() => {\r\n                                        onRemove(\r\n                                            adReader.ad_reader_id,\r\n                                            challenge.id\r\n                                        )\r\n                                    }}\r\n                                >\r\n                                    Remove\r\n                                </button>\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                    <div>\r\n                        <AdReadFindChall\r\n                            setAuth={setAuth}\r\n                            adReader={adReader}\r\n                            setChallenges={setChallenges}\r\n                            challenges={challenges}\r\n                            getAdReaderChallenges={getAdReaderChallenges}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className=\"adreader-button\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleEdit()}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdReaderChallenges\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport ReportAdReaderReading from './ReportAdReaderReading'\r\nimport JoinFamilyGroup from './JoinFamilyGroup'\r\nimport CreateFamilyGroup from './CreateFamilyGroup'\r\nimport CreateAdditionalReader from './CreateAdditionalReader'\r\nimport DeleteAdReader from './DeleteAdReader'\r\nimport AdReaderChallenge from './AdReaderChallenge'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nconst FamilyGroup = ({ setAuth, reader, displayTotal, setDisplayTotal }) => {\r\n    const [inFamGroup, setInFamGroup] = useState(false)\r\n    const [famGroup, setFamGroup] = useState({})\r\n    const [adReaders, setAdReaders] = useState([\r\n        {\r\n            name: undefined,\r\n            chapters_read: '',\r\n            books_read: '',\r\n            verses_memorized: '',\r\n        },\r\n    ])\r\n    const [checkAdReaders, setCheckAdReaders] = useState(true)\r\n\r\n    //get reader's family group\r\n    const getFamilyGroup = async () => {\r\n        try {\r\n            const familyGroup = await fetch('/family-group', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n            if (familyGroup.status === 401) {\r\n                console.log('You are not in a family group')\r\n                setLoading(false)\r\n\r\n                return\r\n            }\r\n            console.log(familyGroup)\r\n            const parseRes = await familyGroup.json()\r\n            setFamGroup(parseRes)\r\n            setInFamGroup(true)\r\n            setLoading(false)\r\n            console.log(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //allow reader to leave family group\r\n    const leaveFG = async () => {\r\n        try {\r\n\r\n            let reader_id = reader.id\r\n            let fg_id = famGroup.id\r\n        \r\n            const body = { reader_id, fg_id }\r\n            const request = await fetch('/family-group/remove-reader', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: localStorage.token,\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            let parsRes = await request.json()\r\n            console.log(parsRes)\r\n            // setInFamilyGroup(false);\r\n            window.location = '/'\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFamilyGroup()\r\n    }, [])\r\n\r\n    const primaryReaders = (readers) => {\r\n        let sentence = ''\r\n        for (let i = 0; i < readers.length; i++) {\r\n            if (i === readers.length - 1) {\r\n                sentence += readers[i] + '.'\r\n            } else if (i === readers.length - 2) {\r\n                sentence += readers[i] + ' and '\r\n            } else {\r\n                sentence += readers[i] + ', '\r\n            }\r\n        }\r\n        return sentence\r\n    }\r\n\r\n    //Get Additional Readers: ...\r\n    const getAdditionalReader = async () => {\r\n        try {\r\n            const getAdditionalReader = await fetch('/additional-readers', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n            const parseRes = await getAdditionalReader.json()\r\n            setAdReaders(parseRes)\r\n            console.log(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getAdditionalReader()\r\n    }, [checkAdReaders]) //might try adding adReaders to dependencies, so that it refreshes with an ad_reader_id?\r\n\r\n    // console.log(adReaders);\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {loading ? (\r\n                <h4>loading...</h4>\r\n            ) : (\r\n                <div>\r\n                    {!inFamGroup ? (\r\n                        <div className=\"form-control my-2\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <p>\r\n                                    You are not in a family Group yet. Family\r\n                                    Groups allows you to report for readers who\r\n                                    are not able to make reading reports for\r\n                                    themselves (such as children)\r\n                                </p>\r\n                                <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                                    <JoinFamilyGroup\r\n                                        setAuth={setAuth}\r\n                                        reader={reader}\r\n                                    />\r\n                                    <CreateFamilyGroup\r\n                                        setAuth={setAuth}\r\n                                        reader={reader}\r\n                                        setFamGroup={setFamGroup}\r\n                                        setInFamGroup={setInFamGroup}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <div className=\"family-title\">\r\n                                <p>\r\n                                    Family Group:{' '}\r\n                                    <strong>{famGroup.family_name}</strong>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"family-group\">\r\n                                <p>\r\n                                    Family Group Leaders:{' '}\r\n                                    {primaryReaders(famGroup.primary_readers)}\r\n                                </p>\r\n                                {console.log(adReaders)}\r\n                                {adReaders.map((adReader, index) => (\r\n                                    <div className=\"family-member\">\r\n                                        <h4\r\n                                            key={index}\r\n                                            style={{\r\n                                                backgroundColor:\r\n                                                    'rgba(252, 169, 3, .25)',\r\n                                            }}\r\n                                        >\r\n                                            {adReader.name}:{' '}\r\n                                        </h4>\r\n                                        <Fragment key={index + 1}>\r\n                                            <ReportAdReaderReading\r\n                                                adReader={adReader}\r\n                                                adReaders={adReaders}\r\n                                                setAdReaders={setAdReaders}\r\n                                                displayTotal={displayTotal}\r\n                                                setDisplayTotal={\r\n                                                    setDisplayTotal\r\n                                                }\r\n                                            />{' '}\r\n                                        </Fragment>\r\n                                        <AdReaderChallenge\r\n                                            setAuth={setAuth}\r\n                                            adReader={adReader}\r\n                                        />\r\n                                        <DeleteAdReader\r\n                                            setAuth={setAuth}\r\n                                            adReader={adReader}\r\n                                            setAdReaders={setAdReaders}\r\n                                            adReaders={adReaders}\r\n                                            reader={reader}\r\n                                            setCheckAdReaders={\r\n                                                setCheckAdReaders\r\n                                            }\r\n                                            famGroup={famGroup}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"family-options\">\r\n                                    <CreateAdditionalReader\r\n                                        setAuth={setAuth}\r\n                                        reader={reader}\r\n                                        adReaders={adReaders}\r\n                                        setAdReaders={setAdReaders}\r\n                                        famGroup={famGroup}\r\n                                        setCheckAdReaders={setCheckAdReaders}\r\n                                        checkAdReaders={checkAdReaders}\r\n                                        leaveFG={leaveFG}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FamilyGroup\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n// import { Link } from \"react-router-dom\";\r\nimport './Dashboard.css'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport FindChallenge from './FindChallenge'\r\nimport ReaderChallenges from './ReaderChallenges'\r\nimport ChallengeDashboard from './ChallengeDashboard'\r\nimport ReaderInfo from './ReaderInfo'\r\nimport ReportReading from './ReportReading'\r\nimport FamilyGroup from './FamilyGroup'\r\n\r\nconst Dashboard = ({ setAuth }) => {\r\n    const [reader, setReader] = useState('')\r\n    const [inReadingChallenge, setInReadingChallenge] = useState(false)\r\n    const [readersChallenges, setReadersChallenges] = useState([])\r\n    const [createChallenge, setCreateChallenge] = useState(false)\r\n    const [familyGroupState, setFamilyGroupState] = useState(false)\r\n    const [findingChallenge, setFindingChallenge] = useState(false)\r\n    //Get the Reader's info\r\n    console.log(readersChallenges)\r\n    async function getReader() {\r\n        try {\r\n            const response = await fetch('/dashboard/', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n\r\n            const parseRes = await response.json()\r\n            setReader(parseRes)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //Check if reader is in challenge\r\n    async function checkChallenge() {\r\n        try {\r\n            const response = await fetch(\r\n                '/reader-dashboard/reader-challenge-id/',\r\n                {\r\n                    method: 'GET',\r\n                    headers: { token: localStorage.token },\r\n                }\r\n            )\r\n\r\n            const parseRes = await response.json()\r\n            if (parseRes.length !== 0) {\r\n                setInReadingChallenge(true)\r\n                setReadersChallenges(parseRes)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        localStorage.removeItem('token')\r\n        setAuth(false)\r\n        toast.success('You logged out successfully!')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getReader()\r\n        checkChallenge()\r\n    }, [inReadingChallenge])\r\n\r\n    const toggleFG = () => {\r\n        familyGroupState === false\r\n            ? setFamilyGroupState(true)\r\n            : setFamilyGroupState(false)\r\n    }\r\n\r\n    const [displayTotal, setDisplayTotal] = useState({\r\n        chapters_read: '',\r\n        books_read: '',\r\n        verses_memorized: '',\r\n    })\r\n\r\n    const toggleFC = () => {\r\n        findingChallenge === false\r\n            ? setFindingChallenge(true)\r\n            : setFindingChallenge(false)\r\n    }\r\n\r\n    const findChallenge = (\r\n        <Fragment>\r\n            <div className=\"form-control mb-2\">\r\n                <FindChallenge\r\n                    setAuth={setAuth}\r\n                    readersChallenges={readersChallenges}\r\n                    setReadersChallenges={setReadersChallenges}\r\n                    inReadingChallenge={inReadingChallenge}\r\n                    setInReadingChallenge={setInReadingChallenge}\r\n                    checkChallenge={checkChallenge}\r\n                    toggleFC={() => toggleFC()}\r\n                    findingChallenge={findingChallenge}\r\n                    setFindingChallenge={setFindingChallenge}\r\n                />\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => setCreateChallenge(true)}\r\n                >\r\n                    Create Challenge\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n    const navButton = {\r\n        margin: '5px',\r\n        minWidth: '150px',\r\n        padding: '3px',\r\n        border: 'double 5px rgb(245, 105, 2)',\r\n        backgroundColor: 'white',\r\n        color: 'rgb(255, 75, 82)',\r\n    }\r\n\r\n    // 1. have find-challenge component and create challenge button loaded if reader not in any challenges.\r\n    // 2. hide find-challenge compenent and create challenge button if in a challenge\r\n    // 3. load both after pushing/clicking challenge button\r\n\r\n    // a. Put a button in nav that toggles inReadingChallenge to false\r\n    // b. Put an exit button in Find Challenge component that toggles inReadingChallenge to true\r\n    // c. Put join button in Find Challenge component\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"nav-container\">\r\n                <ReaderInfo reader={reader} />\r\n                <div className=\"nav-buttons\">\r\n                    <ReportReading\r\n                        setAuth={setAuth}\r\n                        reader={reader}\r\n                        setReader={setReader}\r\n                        toggleFG={() => toggleFG()}\r\n                        toggleFC={() => toggleFC()}\r\n                        findingChallenge={findingChallenge}\r\n                        inReadingChallenge={inReadingChallenge}\r\n                    />\r\n                </div>\r\n            </nav>\r\n            <main>\r\n                {!createChallenge && !inReadingChallenge\r\n                    ? findChallenge\r\n                    : findingChallenge && findChallenge}\r\n                <div className=\"mt-5\">\r\n                    {createChallenge && (\r\n                        <ChallengeDashboard\r\n                            setAuth={setAuth}\r\n                            setCreateChallenge={setCreateChallenge}\r\n                            reader={reader}\r\n                        />\r\n                    )}\r\n                    {familyGroupState && (\r\n                        <FamilyGroup\r\n                            setAuth={setAuth}\r\n                            reader={reader}\r\n                            setDisplayTotal={setDisplayTotal}\r\n                            displayTotal={displayTotal}\r\n                        />\r\n                    )}\r\n                    {!createChallenge && inReadingChallenge && (\r\n                        <>\r\n                            <ReaderChallenges\r\n                                reader={reader}\r\n                                getReader={getReader}\r\n                                setAuth={setAuth}\r\n                                readersChallenges={readersChallenges}\r\n                                setReadersChallenges={setReadersChallenges}\r\n                                setInReadingChallenge={setInReadingChallenge}\r\n                                displayTotal={displayTotal}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n                {/* <Link to={\"/challenge-dashboard\"}>Create Challenge</Link> */}\r\n            </main>\r\n            <button\r\n                className=\"btn btn-warning text-white btn-sm mb-5\"\r\n                onClick={(e) => logout(e)}\r\n            >\r\n                Logout\r\n            </button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Register = ({ setAuth }) => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        user_password: '',\r\n        confirm_password: '',\r\n        first_name: '',\r\n        last_name: '',\r\n    })\r\n    const { email, user_password, confirm_password, first_name, last_name } = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n    \r\n//      const checkPassword = (user_password, confirm_password) => {\r\n//         if (user_password !== confirm_password) {\r\n//             return toast.error('Password does not match. Please try again.')\r\n//         } else {\r\n//             console.log('password matches')\r\n//         }\r\n//     }\r\n\r\n    const onSubmiForm = async (e) => {\r\n        e.preventDefault()\r\n        if(user_password !== confirm_password) {\r\n            return toast.error('Password does not match. Please try again.')\r\n        } else {\r\n        try {\r\n            const body = { email, user_password, first_name, last_name }\r\n            const response = await fetch('/auth/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n            if (parseRes.token) {\r\n                localStorage.setItem('token', parseRes.token)\r\n                setAuth(true)\r\n                toast.success('Registered Successfully')\r\n            } else {\r\n                setAuth(false)\r\n                toast.error(parseRes)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n       }\r\n    }\r\n    //Building the form. Form inputs must be consisistant with req.body of the serve i.e. the name of the inputs must the be the same as the keys for the request body\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Register</h1>\r\n            <form onSubmit={onSubmiForm}>\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First Name\"\r\n                    value={first_name}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={last_name}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control my-3\"\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"password\"\r\n                    name=\"user_password\"\r\n                    placeholder=\"Password\"\r\n                    value={user_password}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"password\"\r\n                    name=\"confirm_password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirm_password}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-success btn-block\">Submit</button>\r\n            </form>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nconst Login = ({ setAuth }) => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        user_password: '',\r\n    })\r\n\r\n    const { email, user_password } = inputs\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { email, user_password }\r\n            const response = await fetch('/auth/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            console.log(`body: ${body}, response: ${response}`)\r\n            const parseRes = await response.json()\r\n\r\n            if (parseRes.token) {\r\n                localStorage.setItem('token', parseRes.token)\r\n                setAuth(true)\r\n                toast.success('login successfull!')\r\n            } else {\r\n                setAuth(false)\r\n                toast.error(parseRes)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Login to start reporting!</h1>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"user_password\"\r\n                    placeholder=\"Password\"\r\n                    value={user_password}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-success btn-block my-2\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            <Link to=\"/register\">Register</Link>\r\n            <br></br>\r\n            <Link to=\"/forgot-passwrod\">Forgot Password</Link>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import e from 'cors'\r\nimport React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ForgotPassword = () => {\r\n    let [email, setEmail] = useState('')\r\n    let [showNullError, setShowNullError] = useState(false)\r\n    let [showError, setShowError] = useState(false)\r\n    let [messageFromServer, setMessageFromServer] = useState('')\r\n    let [sending, setSending] = useState(false)\r\n\r\n    const onChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        console.log(`submit: ${email}`)\r\n    }\r\n\r\n    const sendEmail = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            if (email === '') {\r\n                setShowNullError(true)\r\n                setMessageFromServer('')\r\n            } else {\r\n                setSending(true)\r\n                const body = { email }\r\n                console.log(body)\r\n                const response = await fetch('/forgot-password', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(body),\r\n                })\r\n                // console.log(response)\r\n                const parseRes = await response.json()\r\n                console.log(parseRes)\r\n                if (parseRes === 'email not in db') {\r\n                    setShowNullError(false)\r\n                    setShowError(true)\r\n                    setMessageFromServer('')\r\n                    setSending(false)\r\n                } else if (parseRes === 'recovery email sent') {\r\n                    setShowError(false)\r\n                    setShowNullError(false)\r\n                    setSending(false)\r\n                    setMessageFromServer('recovery email sent')\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Forgot Password Page!</h1>\r\n            <form onSubmit={sendEmail}>\r\n                <input\r\n                    className=\"form-control my-3\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    id=\"email\"\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n\r\n                <button className=\"btn btn-success btn-block my-2\">\r\n                    Submit\r\n                </button>\r\n                <br></br>\r\n            </form>\r\n            {showNullError && (\r\n                <div>\r\n                    <p>The email cannot be blank.</p>\r\n                </div>\r\n            )}\r\n            {showError && (\r\n                <div>\r\n                    <p>\r\n                        That email address isn't recognized. Please try agin or\r\n                        register for a new account.\r\n                    </p>\r\n                    <Link to=\"/register\">Register</Link>\r\n                    <br></br>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            )}\r\n            {messageFromServer === 'recovery email sent' && (\r\n                <div>\r\n                    <br></br>\r\n                    <h3>Reset password email sent! Check your email.</h3>\r\n                </div>\r\n            )}\r\n            {sending && (\r\n                <div>\r\n                    <br></br>\r\n                    <h3>Sending Recovery Email...</h3>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ResetPassword = () => {\r\n    let [inputs, setInputs] = useState({\r\n        email: '',\r\n        user_password: '',\r\n        confirmPassword: '',\r\n    })\r\n    const [updated, setUpdated] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const { email, user_password, confirm_password } = inputs\r\n\r\n    //we need to get the token from the endpoint of the URL (comes after \"/reset/\")\r\n    const url = window.location.href\r\n    const reference = url.lastIndexOf('/')\r\n    const start = reference + 1\r\n    const token = url.slice(start)\r\n    console.log(typeof token.toString())\r\n    ////////////////////////\r\n\r\n    /*\r\n    When sending the request to reset password it should:\r\n\r\n1. Check to see if user exists.\r\n\r\n2. Check to see if token matches database.\r\n\r\n3. Check to see if token is not expired.\r\n\r\nTHEN\r\n\r\n4. generate new password using bcrypt.\r\n\r\n5. update database with new password.\r\n\r\n6. set resettoken and resetexpires to null.\r\n\r\n    */\r\n\r\n    const checkResetToken = async () => {\r\n        try {\r\n            const response = await fetch(`/auth/reset/${token}`, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            console.log(response)\r\n            if (response.status == 200) {\r\n                console.log('status is 200')\r\n                setUpdated(false)\r\n                setIsLoading(false)\r\n                setError(false)\r\n            } else {\r\n                setUpdated(false)\r\n                setIsLoading(false)\r\n                setError(true)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkResetToken()\r\n    }, [])\r\n\r\n    const onChange = (e) => {\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const updatePassword = async (e) => {\r\n        e.preventDefault()\r\n        if (user_password !== confirm_password) {\r\n            return toast.error('Password does not match. Please try again.')\r\n        }\r\n        try {\r\n            setIsLoading(true)\r\n            const body = { email, user_password, token }\r\n            const response = await fetch(`/auth/reset/${token}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            const parseRes = await response.json()\r\n\r\n            console.log(parseRes)\r\n            if (parseRes === 'valid') {\r\n                setIsLoading(false)\r\n                setUpdated(true)\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    //ALTERNATIVE UPDATEPASSWORD FUNCTION\r\n    /* might need response.data instead of just response\r\n    const updatePassword = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { email, user_password }\r\n            const response = await fetch('/auth/update-password', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            console.log(response);\r\n            if (response.message === 'password updated') {\r\n                setUpdated(true)\r\n                setError(false)\r\n            } else {\r\n                setUpdated(false)\r\n                setError(true)\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    */\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Reset Password</h1>\r\n            {error ? (\r\n                <div>\r\n                    <h4>\r\n                        Problem resetting password. Please send another reset\r\n                        link.\r\n                    </h4>\r\n                </div>\r\n            ) : isLoading ? (\r\n                <div>\r\n                    <h5>Loading User Data...</h5>\r\n                </div>\r\n            ) : (\r\n                <form onSubmit={updatePassword}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"form-control my-3\"\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <input\r\n                        className=\"form-control my-3\"\r\n                        type=\"password\"\r\n                        name=\"user_password\"\r\n                        placeholder=\"New Password\"\r\n                        value={user_password}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <input\r\n                        className=\"form-control my-3\"\r\n                        type=\"password\"\r\n                        name=\"confirm_password\"\r\n                        placeholder=\"Confirm New Password\"\r\n                        value={confirm_password}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <button className=\"btn btn-success btn-block\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            )}\r\n            {updated && (\r\n                <div>\r\n                    <p>\r\n                        Your password has been successfully reset, please try\r\n                        logging in again.\r\n                    </p>\r\n                </div>\r\n            )}\r\n            <Link to=\"/forgot-passwrod\">Forgot Password</Link>\r\n            <br></br>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport './App.css'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n//components\r\n\r\nimport Dashboard from './components/Dashboard'\r\nimport Register from './components/Register'\r\nimport Login from './components/Login'\r\nimport ChallengeDashboard from './components/ChallengeDashboard'\r\nimport ReaderInfo from './components/ReaderInfo'\r\nimport ForgotPassword from './components/ForgotPassword'\r\nimport ResetPassword from './components/ResetPassword'\r\n\r\ntoast.configure()\r\n\r\nfunction App() {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\r\n    const setAuth = (boolean) => {\r\n        setIsAuthenticated(boolean)\r\n    }\r\n\r\n    async function isAuth() {\r\n        try {\r\n            const response = await fetch('/auth/is-verify', {\r\n                method: 'GET',\r\n                headers: { token: localStorage.token },\r\n            })\r\n            const parseRes = await response.json()\r\n\r\n            parseRes === true\r\n                ? setIsAuthenticated(true)\r\n                : setIsAuthenticated(false)\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        isAuth()\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n            <Router>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/login\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <Login {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/dashboard\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <Login {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/dashboard\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/register\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <Register {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgot-passwrod\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <ForgotPassword\r\n                                        {...props}\r\n                                        setAuth={setAuth}\r\n                                    />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/reset*\"\r\n                            render={(props) =>\r\n                                !isAuthenticated ? (\r\n                                    <ResetPassword\r\n                                        {...props}\r\n                                        setAuth={setAuth}\r\n                                    />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <Dashboard {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/challenge-dashboard\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <ChallengeDashboard\r\n                                        {...props}\r\n                                        setAuth={setAuth}\r\n                                    />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/readers/:id\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <ReaderInfo {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"*\"\r\n                            render={(props) =>\r\n                                isAuthenticated ? (\r\n                                    <Dashboard {...props} setAuth={setAuth} />\r\n                                ) : (\r\n                                    <Redirect to=\"/login\" />\r\n                                )\r\n                            }\r\n                        />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}